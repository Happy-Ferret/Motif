/*

Modules

Layout modules that can be used, reused, and extended in many ways.

Styleguide 4.0

*/

// JS Main Nav Functionality
.js {
    .menu {
        .nav {
            max-height: 0;
            position: relative;
            overflow: hidden;

            &.is-current {
                max-height: 999px;
            }
            &.is-current,
            &.is-visited {

                // Mixins
                .transition(all, 0.65s, ease-in-out);
            }
        }
    }
}

/*

Nav Bar

A quick navigation bar, typically good for prototyping the main menu of a site.

Markup:
<nav class="menu nav-bar">
    <h3 id="reveal-main-nav" class="title" data-reveal="main-nav-list">
        <b class="button-label">Menu</b>
    </h3>
    <ul id="main-nav-list" class="forceful nav">
        <li><a href="#">Home</a></li>
        <li><a href="#">Services</a></li>
        <li><a href="#">About Us</a></li>
        <li><a href="#" class="is-current">Contact Us</a></li>
    </ul>
</nav>

Styleguide 8.1

*/
.nav-bar {
    .title {

        // Variables
        @base-color: @dark-blue;
        @top-gradient: @base-color;
        @bottom-gradient: darken(@base-color, 3%);

        // Create
        padding: @half-vertical 4%;
        display: block;
        color: @white;
        cursor: pointer;

        // Mixins
        .background-linear-gradient(0, @top-gradient, 100%, @bottom-gradient);
        .margin-leader();

        &:hover,
        &:focus,
        &.is-current {

            // Variables
            @base-color: darken(@dark-blue, 5%);
            @top-gradient: @base-color;
            @bottom-gradient: darken(@base-color, 5%);

            // Mixins
            .background-linear-gradient(0, @top-gradient, 100%, @bottom-gradient);
        }

    }

    .nav {
        margin: 0;

        // Mixins
        background: darken(@dark-blue, 10%);

        a {
            color: @white;
            text-decoration: none;
            padding: @half-vertical 4%;

            &:hover,
            &:focus,
            &.is-current {

                // Mixins
                background: darken(@dark-blue, 15%);
            }
        }
    }
}

.vertical-nav {

    /* Variables */
    @base-text-size: @petite-text-size;
    @5px: 1em * (5 / @base-text-size);
    @8px: 1em * (8 / @base-text-size);
    @10px: 1em * (10 / @base-text-size);
    @15px: 1em * (15 / @base-text-size);
    @20px: 1em * (20 / @base-text-size);
    @35px: 1em * (35 / @base-text-size);

    -webkit-transform: translate3d(0%, 0, 0);
    -moz-transform: translate3d(0%, 0, 0);
    -o-transform: translate3d(0%, 0, 0);
    transform: translate3d(0%, 0, 0);
    -webkit-transition: -webkit-transform 0.25s ease-out;
    -moz-transition: -moz-transform 0.25s ease-out;
    -o-transition: -o-transform 0.25s ease-out;
    transition: transform 0.25s ease-out;

    width: 100%;
    position: relative;

    a {

        /* Display & Box Model */
        display: block;
        padding: @20px @15px @15px @35px;
        border-bottom: 1px solid @black-6;

        /* Positioning */
        position: relative;

        /* Other */
        color: @dark-grey;
        text-decoration: none;

        &:hover,
        &:focus,
        &.is-current {
            background: @dark-white;
        }
        &.is-current {

        }
    }
    &.off-right {
        width: 100%;
        -webkit-transform: translate3d(100%, 0, 0);
        -moz-transform: translate3d(100%, 0, 0);
        -o-transform: translate3d(100%, 0, 0);
        transform: translate3d(100%, 0, 0);
    }
    &.off-left {
        width: 100%;
        -webkit-transform: translate3d(-100%, 0, 0);
        -moz-transform: translate3d(-100%, 0, 0);
        -o-transform: translate3d(-100%, 0, 0);
        transform: translate3d(-100%, 0, 0);
    }
    .has-children {
        &:after {

            /* Mixins */
            .inline-block-fallback();

            /* Display & Box Model */
            width: 0;
            height: 0;
            margin-left: @5px;
            border: solid transparent;
            border-width: 5px 4px;
            border-left-color: @grey;

            /* Other */
            content: "";
            vertical-align: middle;
        }
    }
}

.vertical-nav .notification,
.status {
    .inline-block-fallback();

    &:before {

        /* Variables */
        @base-text-size: @petite-text-size;
        @5px: 1em * (5 / @base-text-size);
        @10px: 1em * (10 / @base-text-size);
        @15px: 1em * (15 / @base-text-size);
        @20px: 1em * (20 / @base-text-size);

        /* Mixins */
        .inline-block-fallback();
        .border-radius(1000em);

        /* Display & Box Model */
        width: @10px;
        height: @10px;
        margin-right: @5px;

        /* Other */
        content: "";
        background: @black-6;
    }
}
.status {
    &:before {

        /* Variables */
        @base-text-size: @petite-text-size;
        @inner-shadow: fadeout(@white, 65%);
        @outer-shadow: fadeout(@black, 70%);

        /* Mixins */
        .box-shadow-in-out(0 3px 1px @inner-shadow, 0 1px 1px @outer-shadow);

        /* Display & Box Model */
        border: 1px solid @dark-grey;
    }
}
.published {
    &:before {

        /* Mixins */
        .background-linear-gradient(0, @light-green, 100%, @green);

        /* Other */
        border-color: darken(@green, 5%);
    }
}
.pending {
    &:before {

        /* Mixins */
        .background-linear-gradient(0, @light-yellow, 100%, @yellow);

        /* Other */
        border-color: darken(@yellow, 5%);
    }
}
.unpublished {
    &:before {

        /* Mixins */
        .background-linear-gradient(0, @light-red, 100%, @red);

        /* Other */
        border-color: darken(@red, 5%);
    }
}
.vertical-nav {
    .status {

        /* Variables */
        @base-text-size: @petite-text-size;
        @5px: 1em * (5 / @base-text-size);
        @10px: 1em * (10 / @base-text-size);
        @15px: 1em * (15 / @base-text-size);
        @20px: 1em * (20 / @base-text-size);

        &:before {

            /* Positioning */
            position: absolute;
            left: @15px;
            top: @20px;

        }
    }
    .desc {
        color: @grey;
    }
    .data,
    .user {
        &:before {

            /* Mixins */
            .data-icon();

            /* Position */
            position: absolute;
            top: 20px;
            left: 15px;
        }
    }
    .data {
        &:before {

            /* Other */
            font-size: 1em;
            content: "\e7a0";
        }
    }
    .user {
        &:before {
            content: "\1f464";
        }
    }
    .notification {
        &.unread {
            &:before {
                background: @yellow;
            }
        }
    }
}





/*
Panel

Used to provide messaging to the user, whether it be direct or through calls to action.
The panel typically indicates a visual separation and implied sub-grouping of its content.

Markup:
<div class="{$modifiers} panel">
    <h2>This is a Panel</h2>
    <p>This is a feedback message for the user.</p>
    <p><a href="#" class="button">User Action</a></p>
</div>
<div class="{$modifiers} panel">
    <p>This is a feedback panel with no heading.</p>
</div>

.inset - Adding this class modifies the look of the panel to a more "sunken in" aesthetic

Styleguide 4.1
*/

.panel {

    // Create
    padding: @full-vertical;
    background-color: lighten(@light-grey, 14%);
    background-color: @black-9;

    // Mixins
    .margin-leader();

    > :first-child {
        margin-top: 0;
    }

    &.thin {
        padding: @half-vertical @full-side;
    }
    &.light{
        background-color: @dark-white;
    }
    &.dark {
        background-color: @light-black;
        color: @dark-white;
    }
    &.grey {
        background-color: @light-grey;
        color: @black-2;
    }
}
    .panel-bordered {
        border: 5px solid @light-grey;
        background: none;
        .border-radius(10px);
    }
    .panel-hidden {
        border-top: 1px solid @black-6;
        border-bottom: 1px solid @black-6;
        position: relative;

        &:before,
        &:after {
            .pseudo-clear();

            margin-left: @full-vertical;
            border: solid transparent;
            border-width: 8px 10px;
            position: absolute;
            left: 0%;
        }

        &:before {
            border-top-color: @black-6;
            top: 0;
        }

        &:after {
            border-top-color: @dark-white;
            top: -1px;
        }
    }

/*
Alert Panel

This variation of the standard `.panel` is used specifically for delivering
direct messages to the user, whether they be informative, complimentary,
or preventative.

Markup:
<div class="{$modifiers} alert panel">
    <h2>This is an Alert Panel</h2>
    <p>This is a feedback message for the user.</p>
    <p><a href="#" class="button">User Action</a></p>
</div>
<div class="{$modifiers} alert panel">
    <p>This is an alert panel with no heading.</p>
</div>

.error -
.success -
.info -

Styleguide 4.1.1
*/

.panel {
    &.alert {

        /* Mixins */
        .inline-block-fallback();

        /* Other */
        background: @yellow;

        &,
        & h1,
        & h2,
        & h3,
        & h4,
        & h5,
        & h6 {
            color: @light-black;
        }
        &.error {
            background: @light-red;

            .alert-title {
                &:before {
                    content: "\2421";
                }
            }
        }
        &.success {
            background: @green;

            .alert-title {
                &:before {
                    content: "\2713";
                }
            }
        }
        &.info {
            background: @blue;
        }
        a {
            color: inherit;
            text-decoration: underline;

            &:hover,
            &:focus {
                text-decoration: none;
            }
        }
    }
    &.inset {

        /* Variables */
        @1px: 1em * (1 / @base-text-size);
        @3px: 1em * (3 / @base-text-size);
        @top-gradient: lighten(@light-grey, 18%);
        @bottom-gradient: lighten(@light-grey, 10%);
        @shadow: fadeout(@light-black, 85%);

        /* Mixins */
        .box-shadow-inset(0, @1px, @3px, @shadow);
        .background-linear-gradient(0, @bottom-gradient, 100%, @top-gradient);

        /* Other */
        text-shadow: 0 @1px @1px @white;
    }

    &.full-width {
        display: block;
        width: 100%;
    }
    &.hide {
        display: none;
    }
}
.alert-title,
.alert-message {

    /* Display & Box Model */
    margin-top: 0;
}
.alert-title {

    /* Variables */
    @base-text-size: @petite-text-size;
    @10px: 1em * (10 / @base-text-size);

    /* Display & Box Model */
    margin-right: @10px;
    padding-right: @10px;

    /* Other */
    border-right: 1px solid @light-black;

    &:before {
        .data-icon();

        // Variables
        @icon-padding: 1em * (5 / 12);

        // Create
        padding-right: @icon-padding;
        font-size: 1em;
        content: "\26A0";
    }
}

.tabs {
    .nav {

        // Variables
        @current-border-width: 3;
        @current-border-top: 1em * (@current-border-width / @base-text-size);
        @current-padding-top: 1em * (((@base-vertical / 2) - @current-border-width) / @base-text-size);
        @current-padding-bottom: 1em * (((@base-vertical / 2) + @default-border-width) / @base-text-size);

        // Create
        border-bottom: @border-width solid @light-grey;

        a {
            padding: @half-vertical @full-side;
            color: @light-grey;
            text-decoration: none;
            background-color: @white;
            position: relative;
            bottom: -@border-width;
            z-index: 30;

            &:hover,
            &:focus {
                color: @light-black;
            }
        }
        .is-current {
            padding: @current-padding-top @full-side-bordered @current-padding-bottom;
            color: @light-black;
            border-left: @border-width solid @light-grey;
            border-right: @border-width solid @light-grey;
            border-top: @current-border-top solid @light-blue;
            z-index: 60;
        }
    }
}

/*

Figures

Great for integrating images into bodies of text, the `.figure` class is paired with the `.float-left` or `.float-right` class depending on where you would like it placed.

Markup:
<figure class="figure float-left">
    <img src="http://placehold.it/213" alt="An image floating left" />
</figure>
<p>He is here. No! Alderaan is peaceful. We have no weapons. You can't possibly&hellip; Kid, I've flown from one side of this galaxy to the other. I've seen a lot of strange stuff, but I've never seen anything to make me believe there's one all-powerful Force controlling everything. There's no mystical energy field that controls my destiny. It's all a lot of simple tricks and nonsense. I can't get involved! I've got work to do! It's not that I like the Empire, I hate it, but there's nothing I can do about it right now. It's such a long way from here. I'm surprised you had the courage to take the responsibility yourself. The more you tighten your grip, Tarkin, the more star systems will slip through your fingers.</p>
<p>He is here. No! Alderaan is peaceful. We have no weapons. You can't possibly&hellip; Kid, I've flown from one side of this galaxy to the other. I've seen a lot of strange stuff, but I've never seen anything to make me believe there's one all-powerful Force controlling everything. There's no mystical energy field that controls my destiny. It's all a lot of simple tricks and nonsense. I can't get involved! I've got work to do! It's not that I like the Empire, I hate it, but there's nothing I can do about it right now. It's such a long way from here. I'm surprised you had the courage to take the responsibility yourself. The more you tighten your grip, Tarkin, the more star systems will slip through your fingers.</p>

Styleguide 7.4

*/

.figure {

    // Mixins
    .margin-leader();

    &.float-left,
    &.float-right {
        float: none;
    }

    img {
        display: block;
    }
}

/**
 * Dropdown Modules
 * -----------------------------------------------------------------------------
 *
 * [Description]
 *
 * @todo
 */

.dropdown-zone {
    position: relative;

    &:hover {
        .dropdown-reveal {
            height: auto;
            border: 1px solid @black-6;
        }
    }
}
    .dropdown-reveal {

        /* Variables */
        @5px: 1em * (5 / @base-text-size);
        @15px: 1em * (15 / @base-text-size);
        @180px: 1em * (180 / @base-text-size);
        @shadow: fadeout(@black, 90%);

        /* Mixins */
        .border-radius-bottom(@5px);
        .box-shadow-raw(0 5px 10px -5px @shadow);

        /* Display & Box Model */
        overflow: hidden;
        width: @180px;
        height: 0;
        margin-top: 0;

        /* Positioning */
        position: absolute;
        top: 100%;
        right: 0;
        z-index: 90;

        /* Other */

        > :first-child {
            margin-top: 0;
        }
        .notifications & {

            /* Variables */
            @265px: 1em * (265 / @base-text-size);

            /* Display & Box Model */
            width: @265px;
        }
    }
    .dropdown-list {

        /* Variables */
        @5px: 1em * (5 / @base-text-size);
        @10px: 1em * (10 / @base-text-size);
        @15px: 1em * (15 / @base-text-size);

        /* Other */
        background: @light-grey;

        .list-item {

            /* Display & Box Model */
            display: block;
            padding: @10px @15px;
            border-bottom: 1px solid @black-6;

            /* Other */
            color: @dark-grey;

            &:hover,
            &:focus {
                background: @dark-white;
            }
        }
        .list-item-empty {
            cursor: default;

            &:hover,
            &:focus {
                background: @light-grey;
            }
        }
        a.list-item {
            color: @dark-grey;

            // &:hover,
            // &:focus {
            //     color: @light-black;
            // }
        }
    }
    .dropdown-list-button {
        margin-top: 0;
        display: block;
        .border-radius-top(0);
    }
.nav {
    li {

        /* Mixins */
        // .inline-block-fallback();

        /* Display & Box Model */
        margin-left: @quarter-side;
        margin-right: @quarter-side;

        &:first-child {
            margin-left: 0;
        }
        &.media-object {
            .inline-block-fallback();
        }
    }
}

.nav.button-group {
    li {
        margin: 0 0 0 1px;

        &:first-child {
            margin-left: 0;

            .button {
                .border-radius-left(5px);
            }
        }

        &:last-child {
            .button {
                .border-radius-right(5px);
            }
        }
    }
    .button {
        .border-radius(0);
    }
}
.nav.horizontal-list {

    li {
        margin-left: 0;

        &:before {
            content: "|";
            margin-right: @half-side;
        }
        &:first-child:before {
            content: "";
            margin: 0;
        }
    }
}
.checkbox-list {
    .media-object {
        display: block;
    }
    &.nav {
        li {

            /* Mixins */
            .inline-block-fallback();

            /* Display & Box Model */
            margin: 0 @half-side;

            &:first-child {
                margin-left: 0;
            }
        }
    }
}


/*
Breadcrumb

Another extension of the `.nav` module, adding a breadcrumb `.label`,
floating it and the ordered list and adding a `/` divider.

Markup:
<nav class="breadcrumb group">
    <p class="label">You are here:</p>
    <ol class="nav">
        <li><a href="#">First Level</a></li>
        <li><a href="#">Second Level</a></li>
        <li><a href="#">Third Level</a></li>
        <li><strong>Fourth Level</strong></li>
    </ol>
</nav>

Styleguide 4.2
*/

.breadcrumb {
    .nav {
        /* Mixins */
        .inline-block-fallback();

        /* Other */
        text-transform: lowercase;

        &:after {
            content: "/";
            margin-right: @quarter-side;
        }
    }

        li {
            margin-left: 0;

            &:before {
                content: "/";
                margin-right: @quarter-side;
            }
        }
}

.content-tree {

    /* Variables */
    @base-text-size: @petite-text-size;
    @5px: 1em * (5 / @base-text-size);
    @10px: 1em * (10 / @base-text-size);
    @15px: 1em * (15 / @base-text-size);
    @17px: 1em * (17 / @base-text-size);
    @20px: 1em * (20 / @base-text-size);
    @25px: 1em * (25 / @base-text-size);
    @30px: 1em * (30 / @base-text-size);

    // .js & {
    //     .content-tree {
    //         display: none;

    //         &.is-current {
    //             display: block;
    //         }
    //     }
    //     .directory {
    //         cursor: pointer;
    //     }
    // }
    .content-tree {
        margin: 0;

        li {
            position: relative;
            padding-left: @30px;
            margin-left: @5px;

            &:after {
                content: "";
                width: @15px;
                height: 1px;
                display: block;
                background: @grey;
                position: absolute;
                left: 0;
                top: @20px;
            }
        }
        .directory {
            padding-left: @20px;
            border-left: 1px solid @grey;
        }
        .directory:last-child {
            border-left: none;

            &:before {
                content: "";
                width: 1px;
                height: @20px;
                display: block;
                background: @grey;
                position: absolute;
                left: 0;
                bottom: 100%;
                margin-bottom: -@20px;
            }
            &:after {
                top: @20px;
                // bottom: @15px;
            }
        }

        // Legacy
        // .create-new-section {
        //     &:before {
        //         content: "";
        //         width: 1px;
        //         height: 100%;
        //         display: block;
        //         background: @grey;
        //         position: absolute;
        //         left: 0;
        //         bottom: 100%;
        //         margin-bottom: -16px;
        //     }
        //     &:after {
        //         top: 16px;
        //         // bottom: @15px;
        //     }
        // }
    }
    li {
        padding-top: @10px;
    }
    .directory {
        padding-top: @15px;

        &.is-current {
            > .directory-name {
                color: @red;
            }
        }
    }
    .button {
        margin-top: 0;
    }
        a {
            color: @grey;
        }
        .activePage,
        .activeSection {
            color: @red;
        }
}


/*

Quick Interactive Classes

Markup:
<a class="js-reveal button" data-reveal="test-reveal" href="#test-reveal">
    Reveal
</a>
<a class="js-expand primary button" data-reveal="test-expand" href="#test-expand">
    Expand
</a>
<a class="js-fade-in secondary button" data-reveal="test-fade-in" href="#test-fade-in">
    Fade and Expand
</a>
<div class="reveal-target" id="test-reveal">
    <div class="panel">This panel was revealed.</div>
</div>
<div class="expand-target" id="test-expand">
    <div class="panel">This panel was expanded.</div>
</div>
<div class="fade-in-target" id="test-fade-in">
    <div class="panel">This panel was faded and expanded.</div>
</div>

@todo MORE ELEGANT SOLUTION??

*/

// .reveal-target {
//     .visually-hidden();

//     &.is-current {
//         .show-hidden();

//         /* Other */
//         overflow: visible;
//     }
// }

.expand-target,
.fade-in-target {
    max-height: 0;
    position: relative;
    overflow: hidden;
}
    .expand-target.is-expanded,
    .fade-in-target.is-showing {
        max-height: 999px;
    }
    .expand-target.is-expanded,
    .fade-in-target.is-showing,
    .expand-target.is-visited,
    .fade-in-target.is-visited {

        // Mixins
        .transition(all, 0.65s, ease-in-out);
    }

.fade-in-target {
    .opacity(0);

    &.is-showing {
        .opacity(1);
    }
}


/*
Statistics

Circle based dashboard stats

*/

.circle {
  .border-radius(1000em);
}

.statistic {

    /* Variables */
    @150px: 1em * (150 / @base-text-size);

    /* Display & Block Model */
    display: block;
    min-width: @150px;

    /* Positioning */
    position: relative;

    /* Other */
    color: @grey;
    text-align: center;

    &.circle {
        height: 0;
        padding-top: 100%;
    }
}
.stat-inner {

    /* Mixins */
    .margin-leader(-1.5, @base-text-size);

    /* Display & Box Model */
    display: block;
    padding: 0 @quarter-vertical;

    /* Positioning */
    position: absolute;
    top: 50%;
    left: 0;
    right: 0;
}

.stat-outlined {
  border: 8px solid @light-grey;
}

.stat-colored {
  background: @green;
  color: @white;

  a& {
    &:hover,
    &:focus,
    &.is-current {
        color: @white;
        background: @dark-green;
    }
  }
}

.tag {
  padding: @quarter-vertical @half-vertical;
  color:@white;

  .inline-block-fallback();

  &.blue {
    background-color:@blue;
  }
  &.green {
    background-color:@green;
  }
  &.red {
    background-color:@red;
  }
  &.yellow {
    background-color:@yellow;
  }
  &.minion-text{
    .padding-trailer(.125);
  }
}

.stats-bar {
    &.forceful.nav {
        border-top: 1px solid darken(@light-grey,5%);
        border-bottom: 1px solid darken(@light-grey,5%);

        .stat {
            .padding-vertical(0.75, @base-text-size);
        }
    }
    .stat {
        border-left: 1px solid darken(@light-grey,5%);

        &:first-child {
            border: none;
        }
    }
  .stat1{
    .canon-text{
      color:@dark-orange;
    }

    border-right:1px solid darken(@light-grey,5%);
  }
  .stat2{
    .canon-text{
      color:@dark-purple;
    }
    border-right:1px solid darken(@light-grey,5%);
  }
  .stat3{
    .canon-text{
      color:@dark-yellow;
    }
    border-right:1px solid darken(@light-grey,5%);
  }
}

.bordered{
  border-bottom:1px solid darken(@light-grey,5%);
}

.panel-reset{
  background-color:#f2f2f2;
}

/* Simple Border */

// Variables
@border-width: @default-border-width * 1em * (1 / @base-text-size);

.border-top {
    border-top: @border-width solid @table-border-color;
}
.border-right {
    border-right: @border-width solid @table-border-color;
}
.border-bottom {
    border-bottom: @border-width solid @table-border-color;
}
.border-left {
    border-left: @border-width solid @table-border-color;
}

/*

Modal

*/

.boxOverlay {

    /* Mixins */
    .opacity(.5);

    /* Display & Box Model */
    display: none;
    width: 100%;
    height: 100%;

    /* Positioning */
    position: fixed;
    top: 0;
    left: 0;

    /* Other */
    background: @black;
}
.alertwindow {
    height: 100%;
    // background: @white;
}
.boxContainer {
    display: none;
    position: absolute;
    top: 0;
    left: 0;
}
.alertwindow-loader {
    height: 25px;
    width: 300px;
    margin-left: auto;
    margin-right: auto;
    background: url(/resources/images/admin/dialog/ajax-loader.gif) top center no-repeat;
}
.alertpad {
    overflow: auto;
}

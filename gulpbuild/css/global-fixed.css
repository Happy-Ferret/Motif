/**
 * Motif v3.3.0
 * A responsive front-end framework to tell *your* story
 * http://getmotif.com
 */
/**
 * Global Stylesheet
 * The site's main (and perhaps only) stylesheet. All supporting stylesheet 
 * files are imported into and compiled from here.
 */
/**
 * Normalize
 * Using the Normalize.css (http://necolas.github.io/normalize.css/) with only minor modification.
 */
/*

HTML5 Display Definitions

Set the appropriate `display` definitions for new HTML5 elements.

The majority will be displayed `block`.

*/
@import url(http://fonts.googleapis.com/css?family=Lato:300,400,700,900);
*,
*:before,
*:after {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  -ms-box-sizing: border-box;
  box-sizing: border-box;
}
body {
  margin: 0;
}
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block;
}
/*

Some, however, need to be `inline-block` with an IE7 fallback.

*/
audio,
canvas,
video {
  display: inline-block;
}
.lte7 audio,
.lte7 canvas,
.lte7 video {
  display: inline;
  zoom: 1;
}
/*

Audio

From Normalize.css:

> Prevents modern browsers from displaying `audio` without controls.
> Remove excess height in iOS5 devices.

*/
audio:not([controls]) {
  display: none;
  height: 0;
}
[hidden] {
  display: none;
}
/*

Type

*/
/*

HTML Font Size Adjust

1. Corrects text resizing oddly in IE6/7 when body `font-size` is set using
   `em` units.
2. Prevents iOS text size adjust after orientation change, without disabling
   user zoom.

*/
html {
  font-size: 100%;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -ms-text-size-adjust: 100%;
  /* 2 */
}
html,
button,
input,
select,
textarea {
  font-family: sans-serif;
}
abbr[title] {
  border: none;
}
i,
cite,
address {
  font-style: normal;
}
dfn {
  font-style: italic;
}
b {
  font-weight: normal;
}
strong {
  font-weight: bold;
}
h1,
h2,
h3,
h4,
h5,
h6,
p,
pre,
blockquote,
menu,
ul,
ol,
dl,
table,
figure {
  /* Display & Box Model */
  margin: 1.42857143em 0 0 0;
  /* Other */
  font-size: 1em;
}
menu,
ol,
ul {
  padding-left: 2.5em;
}
li ul,
li ol {
  margin-top: 0.7142857142857143em;
  margin-bottom: 0.7142857142857143em;
}
dd {
  margin-left: 2.5em;
}
blockquote {
  padding: 1.25em 2.5em;
}
blockquote > :first-child {
  margin-top: 0;
}
q {
  quotes: none;
}
q:before,
q:after {
  content: "";
  content: none;
}
mark {
  background: #ff0;
  color: #000;
}
code,
kbd,
pre,
samp {
  font-family: monospace, serif;
  font-size: 1em;
}
pre {
  white-space: pre;
  white-space: pre-wrap;
  word-wrap: break-word;
}
small {
  font-size: 1em;
}
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sup {
  top: -0.5em;
}
sub {
  bottom: -0.25em;
}
a:focus,
a:active,
a:hover {
  outline: 0;
}
img {
  max-width: 100%;
  border: 0;
}
.lte7 img {
  -ms-interpolation-mode: bicubic;
}
svg:not(:root) {
  overflow: hidden;
}
form {
  margin: 0;
}
fieldset {
  border: none;
  margin: 0;
  padding: 0;
}
legend {
  width: 100%;
  border: 0;
  padding: 0;
  display: block;
  white-space: normal;
}
.lte7 legend {
  margin-left: -7px;
}
button,
input,
select,
textarea {
  font-size: 100%;
  margin: 0;
  display: block;
}
button .lte7,
input .lte7,
select .lte7,
textarea .lte7 {
  vertical-align: middle;
}
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  display: inline-block;
  cursor: pointer;
}
button .lte7,
html input[type="button"] .lte7,
input[type="reset"] .lte7,
input[type="submit"] .lte7 {
  overflow: visible;
  display: inline;
  zoom: 1;
}
button,
input {
  line-height: normal;
}
button[disabled],
input[disabled] {
  cursor: default;
}
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}
input[type="checkbox"],
input[type="radio"] {
  margin: 3px;
  padding: 0;
  box-sizing: border-box;
  position: relative;
  vertical-align: top;
}
input[type="checkbox"] .lte7,
input[type="radio"] .lte7 {
  width: 13px;
  height: 13px;
}
input[type="search"] {
  -webkit-appearance: textfield;
}
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}
textarea {
  overflow: auto;
  vertical-align: top;
}
table {
  border-spacing: 0;
}
/* 

Spacing Helpers

Spacing helpers are quick but powerful classes that add margin or padding to 
any given element. These classes are `!important`, so they override all other 
styles.

* `p`, `m`                          =   padding, margin  
* `a`, `t`, `r`, `b`, `l`, `h`, `v` =   all, top, right, bottom, left, horizontal, vertical  
* `s`, `m`, `l`, `n`                =   small (~`5px`), medium (~`10px`), large (~`20px`), none (`0`)

For example: `.pam` means "padding, all, medium".

**Note:** These are all based on the current element's font size and the 
project's vertical rhythm (even on the sides, to provide uniform spacing). 
As such, they require `_vars.less`.

*/
.ptn,
.pvn,
.pan {
  padding-top: 0 !important;
}
.pts,
.pvs,
.pas {
  padding-top: 0.35714286em !important;
}
.ptm,
.pvm,
.pam {
  padding-top: 0.71428571em !important;
}
.ptl,
.pvl,
.pal {
  padding-top: 1.42857143em !important;
}
.prn,
.phn,
.pan {
  padding-right: 0 !important;
}
.prs,
.phs,
.pas {
  padding-right: 0.35714286em !important;
}
.prm,
.phm,
.pam {
  padding-right: 0.71428571em !important;
}
.prl,
.phl,
.pal {
  padding-right: 1.42857143em !important;
}
.pbn,
.pvn,
.pan {
  padding-bottom: 0 !important;
}
.pbs,
.pvs,
.pas {
  padding-bottom: 0.35714286em !important;
}
.pbm,
.pvm,
.pam {
  padding-bottom: 0.71428571em !important;
}
.pbl,
.pvl,
.pal {
  padding-bottom: 1.42857143em !important;
}
.pln,
.phn,
.pan {
  padding-left: 0 !important;
}
.pls,
.phs,
.pas {
  padding-left: 0.35714286em !important;
}
.plm,
.phm,
.pam {
  padding-left: 0.71428571em !important;
}
.pll,
.phl,
.pal {
  padding-left: 1.42857143em !important;
}
.mtn,
.mvn,
.man {
  margin-top: 0 !important;
}
.mts,
.mvs,
.mas {
  margin-top: 0.35714286em !important;
}
.mtm,
.mvm,
.mam {
  margin-top: 0.71428571em !important;
}
.mtl,
.mvl,
.mal {
  margin-top: 1.42857143em !important;
}
.mrn,
.mhn,
.man {
  margin-right: 0 !important;
}
.mrs,
.mhs,
.mas {
  margin-right: 0.35714286em !important;
}
.mrm,
.mhm,
.mam {
  margin-right: 0.71428571em !important;
}
.mrl,
.mhl,
.mal {
  margin-right: 1.42857143em !important;
}
.mbn,
.mvn,
.man {
  margin-bottom: 0 !important;
}
.mbs,
.mvs,
.mas {
  margin-bottom: 0.35714286em !important;
}
.mbm,
.mvm,
.mam {
  margin-bottom: 0.71428571em !important;
}
.mbl,
.mvl,
.mal {
  margin-bottom: 1.42857143em !important;
}
.mln,
.mhn,
.man {
  margin-left: 0 !important;
}
.mls,
.mhs,
.mas {
  margin-left: 0.35714286em !important;
}
.mlm,
.mhm,
.mam {
  margin-left: 0.71428571em !important;
}
.mll,
.mhl,
.mal {
  margin-left: 1.42857143em !important;
}
/*

Text Align

Simple classes to adjust your text alignment. They can be added to individual elements or on wrapping elements (an outer `div`, perhaps) to adjust the alignment of all the child elements.

*/
.align--left {
  text-align: left;
}
.align--center {
  text-align: center;
}
.align--right {
  text-align: right;
}
.align--sub {
  vertical-align: sub;
}
.align--middle {
  vertical-align: middle;
}
.align--top {
  vertical-align: top;
}
/*

Floats

Next, we have classes for floating elements.

*/
.float--left {
  float: left;
}
.float--center {
  margin-left: auto;
  margin-right: auto;
}
.float--right {
  float: right;
}
.float--none {
  float: none;
}
.clear {
  clear: both;
}
/*

"New Line"

Turns an `inline` or `inline-block` element into a `block` one.

*/
.new-line,
.media-object,
.media-object > *,
.media-object > :first-child img,
.media-object__figure img,
.media-object__desc,
.figure > a,
[class*="figure--"] > a,
.figure img,
[class*="figure--"] img,
[class*="ratio"]:before,
.input-label,
.input-hint,
.input-desc {
  display: block;
}
.group,
.breadcrumb,
.media-object--checkbox {
  /* Mixins */
}
.group:before,
.group:after,
.media-object--checkbox:before,
.media-object--checkbox:after {
  content: "\0020";
  height: 0;
  display: block;
  overflow: hidden;
}
.group:after,
.media-object--checkbox:after {
  clear: both;
}
/*

"Is Hidden"

Visually hides content in a way that leaves it accessible to screen readers. 
Like more magic, makes the visible invisible.

*/
.is-hidden,
.js .reveal__target {
  width: 1px;
  height: 1px;
  padding: 0;
  position: absolute;
  clip: rect(1px 1px 1px 1px);
  /* IE6, IE7 */
  clip: rect(1px, 1px, 1px, 1px);
  border: 0;
  overflow: hidden;
}
.is-hidden.focusable:active,
.is-hidden.focusable:focus {
  width: auto;
  height: auto;
  margin: 0;
  clip: auto;
  overflow: visible;
  position: static;
}
body:hover .is-hidden a,
body:hover .is-hidden input,
body:hover .is-hidden button {
  display: none;
}
@media all and (max-width: 47.9375em) {
  .is-hidden-small {
    width: 1px;
    height: 1px;
    padding: 0;
    position: absolute;
    clip: rect(1px 1px 1px 1px);
    /* IE6, IE7 */
    clip: rect(1px, 1px, 1px, 1px);
    border: 0;
    overflow: hidden;
  }
  .is-hidden-small.focusable:active,
  .is-hidden-small.focusable:focus {
    width: auto;
    height: auto;
    margin: 0;
    clip: auto;
    overflow: visible;
    position: static;
  }
  body:hover .is-hidden-small a,
  body:hover .is-hidden-small input,
  body:hover .is-hidden-small button {
    display: none;
  }
}
@media all and (min-width: 48em) and (max-width: 61.9375em) {
  .is-hidden-medium {
    width: 1px;
    height: 1px;
    padding: 0;
    position: absolute;
    clip: rect(1px 1px 1px 1px);
    /* IE6, IE7 */
    clip: rect(1px, 1px, 1px, 1px);
    border: 0;
    overflow: hidden;
  }
  .is-hidden-medium.focusable:active,
  .is-hidden-medium.focusable:focus {
    width: auto;
    height: auto;
    margin: 0;
    clip: auto;
    overflow: visible;
    position: static;
  }
  body:hover .is-hidden-medium a,
  body:hover .is-hidden-medium input,
  body:hover .is-hidden-medium button {
    display: none;
  }
}
@media all {
  .is-hidden-large {
    width: 1px;
    height: 1px;
    padding: 0;
    position: absolute;
    clip: rect(1px 1px 1px 1px);
    /* IE6, IE7 */
    clip: rect(1px, 1px, 1px, 1px);
    border: 0;
    overflow: hidden;
  }
  .is-hidden-large.focusable:active,
  .is-hidden-large.focusable:focus {
    width: auto;
    height: auto;
    margin: 0;
    clip: auto;
    overflow: visible;
    position: static;
  }
  body:hover .is-hidden-large a,
  body:hover .is-hidden-large input,
  body:hover .is-hidden-large button {
    display: none;
  }
}
/*

"Isn't Hidden"

Undoes `.is-hidden`.

*/
.isnt-hidden,
.js .reveal__target.is-revealed {
  /* Mixins */
  width: auto;
  height: auto;
  margin: 0;
  position: relative;
  clip: auto;
}
body:hover .isnt-hidden a,
body:hover .isnt-hidden input,
body:hover .isnt-hidden button {
  display: inline-block;
}
.lte7 body:hover .isnt-hidden a,
.lte7 body:hover .isnt-hidden input,
.lte7 body:hover .isnt-hidden button {
  display: inline;
  zoom: 1;
}
/*

"Relative Container"

Exactly what it sounds like.

*/
.relative-container,
[class*="ratio"],
.js .expand__target,
.js .fade__target,
[class*="input-alert"],
.js .canvas__primary,
.js .canvas__secondary {
  position: relative;
}
/*

Horizontal List

The basic `.list--x` module simply removes bullets from lists and inlines the list 
items, making the link `inline-block`. The idea is to give the skeleton of a 
horizontal list/navigation without adding too much style (yet).

*/
[class*="list--x"] li,
.tabs nav > ul li {
  display: inline;
}
[class*="list--x"] a,
.tabs nav > ul a {
  display: inline-block;
}
/*

Horizontal List (Forceful)

Rather than making the list `inline-block`, it floats the list elements 
(except on the smallest screen sizes, where it remains vertical). More precise
than the default Horizontal List.

*/
[class*="list--x--forceful"] li,
[class*="list--x--forceful"] a {
  display: block;
}
@media all {
  [class*="list--x--forceful"]:before,
  [class*="list--x--forceful"]:after {
    content: "\0020";
    height: 0;
    display: block;
    overflow: hidden;
  }
  [class*="list--x--forceful"]:after {
    clear: both;
  }
  [class*="list--x--forceful"] li {
    float: left;
  }
}
/*

Link List

A basic extension of the Horizontal List, this adds some margin to the links in
the list for a more pleasant looking list of links.

**Note:** Because we are using the `[class*=""]` attribute selector, using the 
`.link-list--x` class takes advantage of the `list--x` module we declared 
earlier, as well as the Forceful variation (`.link-list--x--forceful`) 
without having to declare *both* `.list--x` and `.link-list--x` in our HTML.

````link-list
<ul class="link-list--x">
    <li>
        <a href="#">Basic Link</a>
    </li>
    <li>
        <a href="#">Basic Link</a>
    </li>
    <li>
        <a href="#">Basic Link</a>
    </li>
</ul>
````

*/
[class*="link-list--x"] a {
  margin-right: 2.14285714em;
}
[class*="link-list--x"] li:last-child a {
  margin-right: 0;
}
/*

Pagination

An extension of the basic `.list--x` module that simply adds enough padding on
the links for pagination.

*/
.list--x--pgs a {
  padding: 0 0.625em;
}
.list--x--pgs a,
.list--x--pgs a:hover,
.list--x--pgs a:focus {
  color: inherit;
}
/*

Breadcrumb

Another extension of the `.list--x` module, adding a breadcrumb `label` 
and floating it and the ordered list.

````breadcrumb
<nav class="breadcrumb" role="navigation">
    <ol class="breadcrumb__list--x">
        <li>
            <a href="#">Breadcrumb Link</a>
        </li>
        <li>
            <a href="#">Breadcrumb Link</a>
        </li>
        <li>
            <a>Breadcrumb Link</a>
        </li>
    </ol>
</nav>
````

*/
.breadcrumb {
  margin-top: 1.4285714285714286em;
}
.breadcrumb__label {
  margin: 0 0.64285714em 0 0;
  float: left;
}
.breadcrumb__list--x {
  margin: 0;
  float: left;
}
.breadcrumb li {
  margin-right: 0.64285714em;
}
/*

Button List

````button-list
<ul class="button-list--x">
    <li>
        <a class="btn--primary" href="#">Button</a>
    </li>
    <li>
        <a class="btn--primary is-current" href="#">Button</a>
    </li>
    <li>
        <a class="btn--primary" href="#">Button</a>
    </li>
</ul>
````

*/
[class*="button-list--x"] {
  margin-top: 0;
  overflow: hidden;
}
[class*="button-list--x"] li,
[class*="button-list--x"] a {
  display: block;
}
[class*="button-list--x"] li {
  float: left;
}
/*

Media Object

The Media Object is an image (or media-type) to the left with (typically) 
descriptive content to the right. The media object can be whatever size it 
wants, the basic format will remain the same. (Text will **not** wrap.)  This 
has any number of applications, such as a checkbox next to a label with lots 
of text.

See: [The Media Object Saves Hundreds of Lines of Code][1]

  [1]: http://www.stubbornella.org/content/2010/06/25/the-media-object-saves-hundreds-of-lines-of-code/


````media-object
<div class="media-object">
    <figure>
        <img src="http://placehold.it/213" alt="A media object image">
    </figure>
    <div>
        <p>He is here. No! Alderaan is peaceful. We have no weapons. You can't possibly&hellip; Kid, I've flown from one side of this galaxy to the other. I've seen a lot of strange stuff, but I've never seen anything to make me believe there's one all-powerful Force controlling everything. There's no mystical energy field that controls my destiny. It's all a lot of simple tricks and nonsense. I can't get involved! I've got work to do! It's not that I like the Empire, I hate it, but there's nothing I can do about it right now. It's such a long way from here. I'm surprised you had the courage to take the responsibility yourself. The more you tighten your grip, Tarkin, the more star systems will slip through your fingers.</p>
    </div>
</div>
````

*/
.media-object,
.media-object > *,
.media-object__desc {
  overflow: hidden;
}
.media-object--checkbox {
  /* Display & Box Model */
  display: inline-block;
  overflow: visible;
}
.media-object--checkbox > :first-child,
.media-object--checkbox .media-object__figure {
  /* Display & Box Model */
  margin-right: 0.32142857em;
}
@media all {
  .media-object > :first-child,
  .media-object__figure {
    max-width: 40%;
    margin-top: 0;
    margin-right: 1.28571429em;
    float: left;
  }
  .media-object > * > :first-child,
  .media-object__desc > :first-child {
    margin-top: 0;
  }
}
@media all {
  .media-object > :first-child,
  .media-object__figure {
    max-width: 50%;
  }
}
/*

Figures

Great for integrating images into bodies of text, the `.figure` class is 
modified by the `--left` and `--right` keywords depending on where you would 
like it placed.

````plain-media
<figure class="figure">
    <img src="http://placehold.it/800x444" alt="A full-width photo">
</figure>
````

````captioned-media
<figure class="figure">
    <img src="http://placehold.it/800x444" alt="A full-width photo with a caption">
    <figcaption class="figcaption">This caption enhances the photo above. It should only be a brief sentence or two long.</figcaption>
</figure>
````

*/
.figure,
[class*="figure--"] {
  margin-top: 1.4285714285714286em;
}
@media all {
  [class*="figure--"] {
    margin-top: 0;
    max-width: 50%;
  }
  .figure--left,
  .figure--right {
    padding-bottom: 0.71428571em;
  }
  .figure--left {
    float: left;
    padding-right: 2.57142857em;
  }
  .figure--right {
    float: right;
    padding-left: 2.57142857em;
  }
}
.icon {
  width: 1em;
  height: 1em;
  display: inline-block;
  vertical-align: text-bottom;
  fill: currentColor;
}
.no-svg .icon {
  display: none;
}
/*

Ratios

Ratios are used primarily for objects that must scale in both width and height
proportionally, such as embedded videos.

See: (http://daverupert.com/2012/04/uncle-daves-ol-padded-box/)

The `.ratio` class (and its modifier) are placed on a wrapping element, with 
its child contents wrapped by the `.ratio__content` class.

    <div class="ratio--square">
        <div class="ratio__content">
            ...
        </div>
    </div>

For embedded videos, use the `.ratio--video` class, and it will assume an 
`iframe` is the direct child:

    <div class="ratio--video">
        <iframe src="http://youtube.com/myVidEmbed"></iframe>
    </div>

*/
[class*="ratio"]:before {
  /* Pretty */
  content: "";
}
.ratio--video:before {
  /* Display & Box Model */
  padding-top: 56.25%;
}
.ratio--1x1:before,
.ratio--square:before {
  padding-top: 100%;
}
.ratio--2x1:before {
  padding-top: 50%;
}
.ratio--1x2:before {
  padding-top: 200%;
}
.ratio__content,
.ratio--video iframe {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}
/*

Wrapper

This is the site-wide containing class. Put it around anything you want to be 
contained in the "site width". By default, caps off at `1150px`.

*/
.wrapper {
  width: 92%;
  margin-left: auto;
  margin-right: auto;
}
@media all and (min-width: 77.5em) {
  .wrapper {
    width: 80%;
    max-width: 82.14285714em;
  }
}
/*

Animated Revealing/Hiding Block Modules

When JavaScript is enabled, these blocks are used (most easily in conjunction 
with Motif jQuery plugins) to reveal and hide blocks of content, sometimes 
accompanied by CSS3 animations.

*/
.js {
  /*
    
    Reveal Target

    `.reveal__target` is a simple class that is accessibly hidden by default.
    Add the `.is-revealed` class to show it.

        <div class="reveal__target">
            I am hidden.
        </div>
        <div class="reveal__target is-revealed">
            I am no longer hidden.
        </div>

    */
  /*
    
    Expand Target

    `.expand__target` has a maximum height of `0` by default, and once it 
    receives the `.is-expanded` class, animates in height to its maximum value. 
    This is the cheap CSS way of expanding animation, as in collapsible 
    accordions. More precise timing most likely requires JS enhancement.

        <div class="expand__target">
            I am hidden from view.
        </div>
        <div class="expand__target is-expanded">
            I have expanded into view.
        </div>

    */
  /*
    
    Fade Target

    `.fade__target` is the same as `.expand__target` (in that it grows in 
    height), but it adds opacity fading to the mix.

        <div class="fade__target">
            I am hidden.
        </div>
        <div class="fade__target is-faded">
            I have faded and expanded into view.
        </div>

    */
}
.js .reveal__target.is-revealed {
  /* Pretty */
  overflow: visible;
}
.js .expand__target,
.js .fade__target {
  max-height: 0;
  overflow: hidden;
}
.js .expand__target.is-expanded,
.js .fade__target.is-faded {
  max-height: 999px;
}
.js .expand__target.is-expanded,
.js .fade__target.is-faded,
.js .expand__target.was-expanded,
.js .fade__target.was-faded {
  -webkit-transition: all 0.65s ease-in-out;
  -moz-transition: all 0.65s ease-in-out;
  -o-transition: all 0.65s ease-in-out;
  transition: all 0.65s ease-in-out;
}
.js .fade__target {
  opacity: 0;
  filter: alpha(opacity=0);
}
.js .fade__target.is-faded {
  opacity: 1;
  filter: alpha(opacity=100);
}
.no-transition {
  -webkit-transition: none !important;
  -moz-transition: none !important;
  -o-transition: none !important;
  transition: none !important;
}
/*

Main Nav Module

A minor enhancement to the Reveal or Expand Target modules if added to the
main navigation bar. This snippet, on Medium screens and larger, makes sure
the expandable Nav (on smaller screens) is no longer hidden, and that the 
Menu Title (be it "Main Menu", the hamburger icon, etc.) is hidden from view.

    <nav class="nav-bar--menu" role="navigation">
        <h3 class="nav-bar__title js-expand" id="reveal-main-nav">
            <svg class="icon"><use xlink:href="#rows"></svg>
            Main Menu
        </h3>
        <ul class="nav-bar__list--x--forceful expand__target" id="main-nav-list">
            ...
        </ul>
    </nav>

*/
@media all {
  .js .menu__list {
    max-height: 999px;
  }
  .menu__title {
    display: none;
  }
}
/*

Tabs

The tabs module (and accompanying plugin) creates a very basic widget that 
allows embedding and basic styling.

````tabs
<section class="tabs js-tabs">
    <nav role="navigation">
        <ul>
            <li>
                <a href="#first-tab">
                    First Tab
                </a>
            </li>
            <li>
                <a href="#second-tab">
                    Second Tab
                </a>
            </li>
        </ul>
    </nav>
    <div>
        <section id="first-tab">
            <h3>First Tab</h3>
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>
        </section>
        <section id="second-tab">
            <h3>Second Tab</h3>
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>
        </section>
    </div>
</section>
````

*/
.js .tabs > nav + *,
.js .tabs__section {
  position: relative;
  overflow: hidden;
}
.js .tabs > nav + * > *,
.js .tab {
  display: none;
}
.js .tabs > nav + * > *.is-current,
.js .tab.is-current {
  display: block;
}
/*

Font Declarations

Using the `.web-font` and `.web-font-svg` mixins, declare webfonts using the 
"bulletproof" `@font-face` syntax.

See: (http://www.fontspring.com/blog/further-hardening-of-the-bulletproof-syntax/)

*/
/*

Font Classes

Each font family and weight used in the site is given its own LEGO-block class
to enable quick use and modularity.

*/
/*

Heading Styles

In Motif, typography is broken into pieces that separate skin from structure.
In this case, that means the font sizing (structure) is separate from the 
styling (skin) -- which includes font family, color, etc.

Heading styles are some of the type skins, and we start out with 
`.primary-heading` (which is also the `h`-tag default) and 
`.secondary-heading`. Add as necessary.

````primary-heading
<h1 class="primary-heading">Primary Heading</h1>
````

*/
h1,
h2,
h3,
h4,
h5,
h6 {
  margin-top: 1.75em;
}
h1,
h2,
h3,
h4,
h5,
h6,
.primary-heading {
  font-weight: normal;
}
/*

Secondary Heading

````secondary-heading
<h2 class="secondary-heading">Secondary Heading</h2>
````

*/
/*

Body Text

Another type style, but this mimicks the default body text of the site.

````body-text
<p>This is a paragraph of text. Some of the text may be <em>emphasised</em> and some it might even be <strong>strongly emphasised</strong>. Occasionally <q>quoted text</q> may be found within a paragraph &hellip;and of course <a href="#">a link</a> may appear at any point in the text. The average paragraph contains five or six sentences although some may contain as little or one or two while others carry on for anything up to ten sentences and beyond.</p>
````

*/
/*

Unstyled List

A basic stripping of list styles.

*/
.list--unstyled,
[class*="list--x"],
ul.nav--vert,
.tabs nav > ul {
  padding-left: 0;
  list-style: none outside none;
}
/*

Blockquote

A basic blockquote.

````blockquote
<figure class="blockquote">
    <blockquote>
        At last we will reveal ourselves to the the Jedi. At last we will have 
        our revenge.
    </blockquote>
    <figcaption class="blockquote__cite">Darth Maul</figcaption>
</figure>
````

*/
.blockquote {
  padding-left: 1.28571429em;
}
.blockquote blockquote {
  padding: 0;
}
.blockquote__cite {
  display: block;
}
.blockquote__cite:before {
  content: "\2014";
}
/*

Typographic Scale

The building blocks for the site's type sizes. Almost exclusively, an element's 
font size is assigned with one of these classes. If a new size is needed, a new 
class is created here so it can be used and reused elsewhere.

The list of type sizes can grow or shrink, but be vigilant in keeping the 
number of sizes to a minimum. A nice rule of thumb is that no two sizes can one 
pixel in difference (forcing you to choose one over the other, giving you one 
class where you previously had two).

````typographic-scale
<p class="canon-text">Canon Text (38px)</p>
<p class="paragon-text">Paragon Text (30px)</p>
<p class="primer-text">Primer Text (24px)</p>
<p class="tertia-text">Tertia Text (18px)</p>
<p class="normal-text">Normal Text (14px)</p>
<p class="petite-text">Petite Text (12px)</p>
````

*/
/*

Canon Text

*/
.canon-text,
.wysiwyg h1,
.wysiwyg .canon-text {
  font-size: 38px;
  font-size: 2.375rem;
  line-height: 1.18421053;
}
/*

Paragon Text

*/
.paragon-text,
.wysiwyg h2,
.wysiwyg .paragon-text {
  font-size: 30px;
  font-size: 1.875rem;
  line-height: 1.16666667;
}
/*

Primer Text

*/
[class*="primer-text"] {
  font-size: 24px;
  font-size: 1.5rem;
  line-height: 1.25;
}
/*

Tertia Text

*/
[class*="tertia-text"] {
  font-size: 18px;
  font-size: 1.125rem;
  line-height: 1.38888889;
}
/*

Normal Text

*/
[class*="normal-text"],
body,
.body-text,
.input-hint,
.input-desc,
[class*="input-alert"],
input,
textarea {
  font-size: 14px;
  font-size: 0.875rem;
  line-height: 1.07142857;
}
/*

Petite Text

*/
[class*="petite-text"],
.figure figcaption,
.figcaption {
  font-size: 12px;
  font-size: 0.75rem;
  line-height: 1.25;
}
/*

Long Modifiers

The smaller type sizes are given the `--long` modifier, allowing you to use
each type size with varying line heights.

    <p class="petite-text">I'm just a small bit of text, my `line-height` 
    can be tight.</p>

    <p class="petite-text--long">I'm a long paragraph, so my `line-height` 
    should be longer to enhance legibility. ... </p>

*/
.primer-text--long,
.tertia-text--long,
.normal-text--long,
.petite-text--long,
body,
.body-text,
.input-hint,
.input-desc,
[class*="input-alert"],
input,
textarea {
  line-height: 1.5;
}
/*

Interactive Elements

*/
/*

Buttons

Default interactive button styles. This `.btn` class can be applied to `<a>`, 
`<button>`, or `<input>` elements. Button color and style classes can be combined 
with size classes, much like the type modules.

````buttons
<a class="btn" href="#">Default</a>
<a class="btn--primary" href="#">Primary</a>
<a class="btn--danger" href="#">Danger</a>
````

*/
.btn,
[class*="btn"] {
  width: auto;
  height: auto;
  margin: 0;
  line-height: normal;
  text-decoration: none;
  position: relative;
  -webkit-appearance: none;
  -webkit-background-clip: padding;
  -moz-background-clip: padding;
  background-clip: padding-box;
  outline: 0;
  overflow: visible;
  cursor: pointer;
  vertical-align: middle;
  display: inline-block;
  background: #cfcdcd;
  color: #262626;
  text-align: center;
  padding: 0.71428571em 1.28571429em;
  margin-top: 1.4285714285714286em;
}
p > .btn,
p > [class*="btn"] {
  margin-top: 0;
}
.btn:hover,
[class*="btn"]:hover,
.btn:focus,
[class*="btn"]:focus,
.btn.is-current,
[class*="btn"].is-current {
  background: #e8e7e7;
}
/*

````tiny-buttons
<a class="btn--tiny" href="#">Tiny Button</a>
<a class="btn--tiny btn--primary" href="#">Tiny Button Primary</a>
<a class="btn--tiny btn--danger" href="#">Tiny Button Danger</a>
````

*/
/*

````small-buttons
<a class="btn--small" href="#">Small Button</a>
<a class="btn--small btn--primary" href="#">Small Button Primary</a>
<a class="btn--small btn--danger" href="#">Small Button Danger</a>
````

*/
/*

````large-buttons
<a class="btn--large" href="#">Large Button</a>
<a class="btn--large btn--primary" href="#">Large Button Primary</a>
<a class="btn--large btn--danger" href="#">Large Button Danger</a>
````

*/
.btn--tiny {
  font-size: 12px;
  font-size: 0.75rem;
  padding: 0.35714286em 0.64285714em;
}
.btn--small {
  font-size: 12px;
  font-size: 0.75rem;
}
.btn--large {
  font-size: 18px;
  font-size: 1.125rem;
}
.btn--full-width {
  width: 100%;
  padding-left: 0;
  padding-right: 0;
}
/*

Link Styles

Very basic stuff. The primary link color can be altered in the `_config.less` 
file. Hover, focus, and current states are accounted for.

*/
a,
.link,
.list--x--pgs a[href] {
  color: #1f75ae;
}
a:hover,
.link:hover,
a:focus,
.link:focus,
a.is-current,
.link.is-current,
.list--x--pgs a[href]:hover,
.list--x--pgs a[href]:focus,
.list--x--pgs a[href].is-current {
  color: #13496d;
}
/*

Unlink

Basic class to remove some link styling.

@TODO: Put in `_presentational.less` file?

*/
.unlink {
  text-decoration: none;
}
/*

Forms

*/
/*

Basic Form Elements

Inputs and textareas are set to `width: 100%` to adapt to the width of their 
wrapper. (Great for grids.) Select boxes are set to the width of their content,
maxing out at `100%`.

Almost all the form elements in Motif are best used inside a `label`.

    <label>
        Text Field
        <input type="text" name="text" required>
    </label>

*/
input,
textarea {
  width: 100%;
  font-size: 1em;
  padding: 0.35714286em 0.28571429em;
  outline: none;
}
input:hover,
textarea:hover,
input:focus,
textarea:focus,
input:active,
textarea:active,
input.is-current,
textarea.is-current {
  z-index: 1;
}
input[type="checkbox"],
input[type="radio"] {
  width: auto;
}
.lte7 input[type="checkbox"],
.lte7 input[type="radio"] {
  width: 13px;
}
textarea {
  height: 5.71428571em;
}
select {
  width: auto;
  max-width: 100%;
  font-size: 0.8125em;
}
/*

Input Label Elements

Child form elements of the `.input-label` class are given a little bit of 
spacing to separate them from the label text. (See also `.input-label` in the
form `_type.less` file.)

````input-label-elements
<label class="input-label">
    Text Field
    <input type="text" name="text" placeholder="Placeholder text" required>
</label>
<label class="input-label">
    Textarea
    <textarea placeholder="Placeholder text"></textarea>
</label>
<label class="input-label">
    Select
    <select>
        <option>Placeholder text</option>
    </select>
</label>
````

*/
.input-label input,
.input-label textarea,
.input-label select {
  margin-top: 0.7142857142857143em;
  margin-bottom: 0.7142857142857143em;
}
/*

Input Widths

While you are encouraged to use the responsive grid system in conjunction with 
your form styles, sometimes it's useful to have form field widths that are 
simply consistent across viewports. These are those.

    <label class="input-label">
        Text Field
        <input class="input--xs" type="text" name="text" required>
    </label>

*/
.input--eighth {
  width: 12.5%;
}
.input--quarter {
  width: 25%;
}
.input--half {
  width: 50%;
}
.input--xxxs {
  max-width: 2.14285714em;
}
.input--xxs {
  max-width: 3.57142857em;
}
.input--xs {
  max-width: 7.14285714em;
}
.input--s {
  max-width: 12.5em;
}
.input--m {
  max-width: 17.85714286em;
}
.input--l {
  max-width: 25em;
}
/*

Form Modules

````attached-label-before
<label class="attached-label">
    <small class="label">$</small>
    <input type="num" id="attached-label-before" required>
</label>
````

````attached-label-after
<label class="attached-label">
    <input type="text" id="attached-label-after" required>
    <small class="label">.com</small>
</label>
````

````attached-label-before-and-after
<label class="attached-label">
    <small class="label">www.</small>
    <input type="text" id="attached-label" placeholder="domain" required>
    <small class="label">.com</small>
</label>
````

````attached-label-submit
<form class="attached-label">
    <label class="is-hidden" for="attached-label-submit">Search</label>
    <input type="search" id="attached-label-submit" required>
    <div>
        <button type="submit" class="btn--primary">
            <svg class="icon"><use xlink:href="#search"></svg>
            <b class="is-hidden">Submit</b>
        </button>
    </div>
</form>
````

*/
.attached-label {
  display: table;
  overflow: hidden;
}
.attached-label > * {
  margin-top: 0;
  display: table-cell;
  vertical-align: middle;
}
.attached-label > * > :first-child {
  margin-top: 0;
}
.attached-label [class*="btn"] {
  display: block;
  width: 100%;
}
/*

Input Label

The `.input-label` class should be added to form labels that want a little 
extra styling for the label text.

(You may need to do some fancy things with hidden or altered labels, which is
why these styles aren't added to the `label` element by default.)

    <label class="input-label">
        Text Field
        <input type="text" name="text" required>
    </label>

There are also input descriptions, which go directly underneath the label text,
and input hints that typically go underneath the input field.

    <label class="input-label">
        Text Field
        
        <small class="input-desc">
            This is a small description of the field.
        </small>
        
        <input type="text" name="text" required>
        
        <strong class="input-hint">
            This is an important hint.
        </strong>
    </label>

*/
.input-label {
  padding-top: 1.4285714285714286em;
}
.input-hint {
  color: #a9a6a7;
  margin-top: 0.35714285714285715em;
}
.input-desc {
  margin-top: 0em;
}
/*

Fieldset

A simple class to add to fieldsets that want a little more spacing.

*/
.fieldset {
  margin-top: 1.4285714285714286em;
  padding-bottom: 1.4285714285714286em;
}
/*

Checkbox List

Lists of radio or checkbox inputs should typically be just that: lists. In 
Motif, you're encouraged to mark up your input lists as semantically as 
possible, meaning a fieldset, with a legend, and a list of inputs:

    <fieldset>
        <legend>
            <b class="input-label">This is a question for a radio list?</b>
        </legend>

        <ul class="checkbox-list">
            <li>
                <label class="media-object">
                    <input class="media-object__figure"
                     type="radio"
                     name="radioList"
                     value="Yes">

                    <b class="media-object__desc">
                        Yes
                    </b>
                </label>
            </li>
            <li>
                <label class="media-object">
                    <input class="media-object__figure"
                     type="radio"
                     name="radioList"
                     value="No">

                    <b class="media-object__desc">
                        No
                    </b>
                </label>
            </li>
        </ul>
    </fieldset>

*/
.checkbox-list {
  margin-top: 0.7142857142857143em;
}
legend + .checkbox-list {
  margin-top: 0em;
}
legend .input-label {
  padding-bottom: 0.35714285714285715em;
}
legend + .input-desc {
  /* Positioning */
  position: relative;
  top: -0.35714286em;
}
/*

Form Validation

*/
/*

Input States

A couple of classes added to inputs (typically by a JS Validation plugin) that
alter the child elements to convey states of success and error.

    <label class="input-label is-erroneous">
        Text Field
        <input type="text" name="text" required>
    </label>

*/
.is-successful input,
.is-successful textarea,
.is-successful select {
  border-color: #72bc44;
}
.is-erroneous input,
.is-erroneous textarea,
.is-erroneous select {
  border-color: #e63c4d;
}
/*

Form Messaging

Within labels, there are input alerts that apply to individual fields.

    <label class="input-label is-erroneous">
        Text Field
        <input type="text" name="text" required>
        <strong class="input-alert--error">
            This field is required.
        </strong>
    </label>

*/
[class*="input-alert"] {
  /* Display & Box Model */
  display: inline-block;
  /* Pretty */
  color: #13496d;
}
.input-alert--warning {
  color: #ec8e04;
}
.input-alert--error {
  color: #e63c4d;
}
.input-alert--success {
  color: #72bc44;
}
/*

Responsive Grid

The default responsive grid in Motif is built with a few rules in mind:

1. Each row of columns must be wrapped in a row element
2. There's no need to specify if a column is first or last

With that in mind, there is a basic syntax to learn for what classes to use.
Our breakpoints are classified as:

- Base
- Small
- Medium
- Large
- Extra Large

Our default responsive grid system only uses 3 grids to cover all of our bases:

- `grid, small` covers Base and Small viewports, but cuts off at Medium
- `grid, medium` covers only Medium
- `grid, large` starts at Large and covers Extra Large as well (there is no max
cutoff value for `grid, large`)

Understanding that, the syntax should be easy to understand. In these examples,
we will talk about `grid, small`:

- **Rows**: `.gs-row` (Grid, Small, Row)
- **Columns**: `.gcs` (Grid, Column, Small)
- **Column Width**: `.gs-half` (Grid, Small, Half-Width)

    <div class="gs-row">
        <div class="gcs gs-half">...</div>
        <div class="gcs gs-half">...</div>
    </div>

However, to be slightly more succinct, you can use the condensed column syntax:

- **Columns (Condensed)**: `.gcs-half` (Grid, Column, Small, Half-Width)

    <div class="gs-row">
        <div class="gcs-half">...</div>
        <div class="gcs-half">...</div>
    </div>

In brief, the way the grid works is that `.gcs` floats the element to the left
(by default), and adds padding to both the left and the right. `-half` gives
it a width of `50%`. The combined padding of the two columns bumped up against 
each other form the full "gutter". The `.gs-row` then clears the floats and has
a *negative* margin on both the left and the right that pops the columns out to
the sides the exact width of their paddings, meaning the column content lines 
up with the site boundaries on the left and right without the need to specify 
"first" or "last" column classes.

To use this responsively, then, you just add the classes by breakpoint:

    <div class="gs-row gm-row gl-row">
        <div class="gcs-half gcm-third gcl-quarter">
            ...
        </div>
        <div class="gcs-half gcm-two-thirds gcl-three-quarters">
            ...
        </div>
    </div>

By default, the column breakdown of each grid breakpoint:

- `grid, small`: 4 columns
- `grid, medium`: 9 columns
- `grid, large`: 12 columns

For the larger grids, the classes follow the numbers closely...

    - `.gcl-10of12
    - `.gcm-4of9`

...in just about every combination (based on their total column number), but 
all of the grids also have a few "fuzzy" shortcuts as well:

    - `half`
    - `third`
    - `quarter`
    - `three-quarters`
    - `two-thirds`

*/
.g-halves,
.g-thirds,
.g-quarters {
  margin-left: -0.85714286em;
  margin-right: -0.85714286em;
  /* Pretty */
  letter-spacing: -0.31em;
  text-rendering: optimizespeed;
}
.g-halves:before,
.g-thirds:before,
.g-quarters:before,
.g-halves:after,
.g-thirds:after,
.g-quarters:after {
  content: "\0020";
  height: 0;
  display: block;
  overflow: hidden;
}
.g-halves:after,
.g-thirds:after,
.g-quarters:after {
  clear: both;
}
ul.g-halves,
ul.g-thirds,
ul.g-quarters {
  padding-left: 0;
  list-style: none outside none;
}
.g-halves > *,
.g-thirds > *,
.g-quarters > * {
  display: inline;
  float: left;
  padding-left: 0.85714286em;
  padding-right: 0.85714286em;
  /* Display & Box Model */
  display: inline-block;
  /* Positioning */
  float: none;
  /* Pretty */
  letter-spacing: normal;
  word-spacing: normal;
  vertical-align: top;
  text-rendering: auto;
}
.g-halves > * {
  width: 50%;
}
.g-thirds > * {
  width: 33.33333%;
}
.g-quarters > * {
  width: 25%;
}
.opera-only :-o-prefocus,
.g-thirds {
  word-spacing: -0.43em;
}
/**
 * Mobile Grid
 */
@media all and (max-width: 47.9375em) {
  [class*="gs-row"],
  .gs-quarters,
  .gs-thirds,
  .gs-halves {
    margin-left: -0.85714286em;
    margin-right: -0.85714286em;
  }
  [class*="gs-row"]:before,
  [class*="gs-row"]:after,
  .gs-quarters:before,
  .gs-quarters:after,
  .gs-thirds:before,
  .gs-thirds:after,
  .gs-halves:before,
  .gs-halves:after {
    content: "\0020";
    height: 0;
    display: block;
    overflow: hidden;
  }
  [class*="gs-row"]:after,
  .gs-quarters:after,
  .gs-thirds:after,
  .gs-halves:after {
    clear: both;
  }
  ul[class*="gs-row"],
  ul.gs-quarters,
  ul.gs-thirds,
  ul.gs-halves {
    padding-left: 0;
    list-style: none outside none;
  }
  .gs-row--rtl > [class*="gcs"] {
    float: right;
  }
  .gs-row--ltr > [class*="gcs"] {
    float: left;
  }
  [class*="gcs"],
  .gs-quarters > *,
  .gs-thirds > *,
  .gs-halves > * {
    display: inline;
    float: left;
    padding-left: 0.85714286em;
    padding-right: 0.85714286em;
  }
  .gs-quarter,
  .gcs-quarter,
  .gs-quarters > * {
    width: 25%;
  }
  .gs-third,
  .gcs-third,
  .gs-thirds > * {
    width: 33.33333%;
  }
  .gs-half,
  .gcs-half,
  .gs-halves > * {
    width: 50%;
  }
  .gs-two-thirds,
  .gcs-two-thirds {
    width: 66.66667%;
  }
  .gs-three-quarters,
  .gcs-three-quarters {
    width: 75%;
  }
  .gs-full,
  .gcs-full {
    width: 100%;
  }
  .gs-row--flex,
  .gs-quarters,
  .gs-thirds,
  .gs-halves {
    letter-spacing: -0.31em;
    text-rendering: optimizespeed;
  }
  .gs-row--flex > [class*="gcs"],
  .gs-quarters > *,
  .gs-thirds > *,
  .gs-halves > * {
    float: none;
    display: inline-block;
    letter-spacing: normal;
    word-spacing: normal;
    vertical-align: top;
    text-rendering: auto;
  }
  .opera-only :-o-prefocus,
  .gs-row--flex,
  .gs-quarters,
  .gs-thirds,
  .gs-halves {
    word-spacing: -0.43em;
  }
}
/**
 * Tablet Grid
 */
@media all and (min-width: 48em) and (max-width: 61.9375em) {
  [class*="gm-row"],
  .gm-quarters,
  .gm-thirds,
  .gm-halves {
    margin-left: -1.14285714em;
    margin-right: -1.14285714em;
  }
  [class*="gm-row"]:before,
  [class*="gm-row"]:after,
  .gm-quarters:before,
  .gm-quarters:after,
  .gm-thirds:before,
  .gm-thirds:after,
  .gm-halves:before,
  .gm-halves:after {
    content: "\0020";
    height: 0;
    display: block;
    overflow: hidden;
  }
  [class*="gm-row"]:after,
  .gm-quarters:after,
  .gm-thirds:after,
  .gm-halves:after {
    clear: both;
  }
  ul[class*="gm-row"],
  ul.gm-quarters,
  ul.gm-thirds,
  ul.gm-halves {
    padding-left: 0;
    list-style: none outside none;
  }
  .gm-row--rtl > [class*="gcm"] {
    float: right;
  }
  .gm-row--ltr > [class*="gcm"] {
    float: left;
  }
  [class*="gcm"],
  .gm-quarters > *,
  .gm-thirds > *,
  .gm-halves > * {
    display: inline;
    float: left;
    padding-left: 1.14285714em;
    padding-right: 1.14285714em;
  }
  .gm-quarter,
  .gcm-quarter,
  [class*="m-2of8"],
  .gm-quarters > * {
    width: 25%;
  }
  .gm-third,
  .gcm-third,
  [class*="m-3of9"],
  [class*="m-2of6"],
  .gm-thirds > * {
    width: 33.33333%;
  }
  .gm-half,
  .gcm-half,
  [class*="m-4of8"],
  [class*="m-3of6"],
  .gm-halves > * {
    width: 50%;
  }
  .gm-two-thirds,
  .gcm-two-thirds,
  [class*="m-6of9"],
  [class*="m-4of6"] {
    width: 66.66667%;
  }
  .gm-three-quarters,
  .gcm-three-quarters,
  [class*="m-6of8"] {
    width: 75%;
  }
  .gm-full,
  .gcm-full {
    width: 100%;
  }
  [class*="m-8of9"] {
    width: 88.88889%;
  }
  [class*="m-7of9"] {
    width: 77.77778%;
  }
  [class*="m-5of9"] {
    width: 55.55556%;
  }
  [class*="m-4of9"] {
    width: 44.44444%;
  }
  [class*="m-2of9"] {
    width: 22.22222%;
  }
  [class*="m-1of9"] {
    width: 11.11111%;
  }
  [class*="m-7of8"] {
    width: 87.5%;
  }
  [class*="m-5of8"] {
    width: 62.5%;
  }
  [class*="m-3of8"] {
    width: 37.5%;
  }
  [class*="m-1of8"] {
    width: 12.5%;
  }
  [class*="m-6of7"] {
    width: 85.71429%;
  }
  [class*="m-5of7"] {
    width: 71.42857%;
  }
  [class*="m-4of7"] {
    width: 57.14286%;
  }
  [class*="m-3of7"] {
    width: 42.85714%;
  }
  [class*="m-2of7"] {
    width: 28.57143%;
  }
  [class*="m-1of7"] {
    width: 14.28571%;
  }
  [class*="m-5of6"] {
    width: 83.33333%;
  }
  [class*="m-1of6"] {
    width: 16.66667%;
  }
  [class*="m-4of5"] {
    width: 80%;
  }
  [class*="m-3of5"] {
    width: 60%;
  }
  [class*="m-2of5"] {
    width: 40%;
  }
  [class*="m-1of5"] {
    width: 20%;
  }
  .gm-row--flex,
  .gm-quarters,
  .gm-thirds,
  .gm-halves {
    letter-spacing: -0.31em;
    text-rendering: optimizespeed;
  }
  .gm-row--flex > [class*="gcm"],
  .gm-quarters > *,
  .gm-thirds > *,
  .gm-halves > * {
    float: none;
    display: inline-block;
    letter-spacing: normal;
    word-spacing: normal;
    vertical-align: top;
    text-rendering: auto;
  }
  .opera-only :-o-prefocus,
  .gm-row--flex,
  .gm-quarters,
  .gm-thirds,
  .gm-halves {
    word-spacing: -0.43em;
  }
}
/**
 * Desktop Grid
 */
/*

````desktop-grid
<div class="gl-quarters">
    <div>
        <div class="block">Quarter</div>
    </div>
    <div>
        <div class="block">Quarter</div>
    </div>
    <div>
        <div class="block">Quarter</div>
    </div>
    <div>
        <div class="block">Quarter</div>
    </div>
</div>
<div class="gl-thirds">
    <div>
        <div class="block">Third</div>
    </div>
    <div>
        <div class="block">Third</div>
    </div>
    <div>
        <div class="block">Third</div>
    </div>
</div>
<div class="gl-halves">
    <div>
        <div class="block">Half</div>
    </div>
    <div>
        <div class="block">Half</div>
    </div>
</div>
<div class="gl-row">
    <div class="gcl-two-thirds">
        <div class="block">Two Thirds</div>
    </div>
    <div class="gcl-third">
        <div class="block">Third</div>
    </div>
</div>
<div class="gl-row">
    <div class="gcl-three-quarters">
        <div class="block">Three Quarters</div>
    </div>
    <div class="gcl-quarter">
        <div class="block">Quarter</div>
    </div>
</div>
````

*/
@media all {
  [class*="gl-row"],
  .gl-quarters,
  .gl-thirds,
  .gl-halves {
    margin-left: -1.28571429em;
    margin-right: -1.28571429em;
  }
  [class*="gl-row"]:before,
  [class*="gl-row"]:after,
  .gl-quarters:before,
  .gl-quarters:after,
  .gl-thirds:before,
  .gl-thirds:after,
  .gl-halves:before,
  .gl-halves:after {
    content: "\0020";
    height: 0;
    display: block;
    overflow: hidden;
  }
  [class*="gl-row"]:after,
  .gl-quarters:after,
  .gl-thirds:after,
  .gl-halves:after {
    clear: both;
  }
  ul[class*="gl-row"],
  ul.gl-quarters,
  ul.gl-thirds,
  ul.gl-halves {
    padding-left: 0;
    list-style: none outside none;
  }
  .gl-row--rtl > [class*="gcl"] {
    float: right;
  }
  .gl-row--ltr > [class*="gcl"] {
    float: left;
  }
  [class*="gcl"],
  .gl-quarters > *,
  .gl-thirds > *,
  .gl-halves > * {
    display: inline;
    float: left;
    padding-left: 1.28571429em;
    padding-right: 1.28571429em;
  }
  .gl-quarter,
  .gcl-quarter,
  [class*="l-3of12"],
  [class*="l-2of8"],
  .gl-quarters > * {
    width: 25%;
  }
  .gl-third,
  .gcl-third,
  [class*="l-4of12"],
  [class*="l-3of9"],
  [class*="l-2of6"],
  .gl-thirds > * {
    width: 33.33333%;
  }
  .gl-half,
  .gcl-half,
  [class*="l-6of12"],
  [class*="l-5of10"],
  [class*="l-4of8"],
  [class*="l-3of6"],
  .gl-halves > * {
    width: 50%;
  }
  .gl-two-thirds,
  .gcl-two-thirds,
  [class*="l-8of12"],
  [class*="l-6of9"],
  [class*="l-4of6"] {
    width: 66.66667%;
  }
  .gl-three-quarters,
  .gcl-three-quarters,
  [class*="l-9of12"],
  [class*="l-6of8"] {
    width: 75%;
  }
  .gl-full,
  .gcl-full {
    width: 100%;
  }
  [class*="l-11of12"] {
    width: 91.66667%;
  }
  [class*="l-10of12"] {
    width: 83.33333%;
  }
  [class*="l-7of12"] {
    width: 58.33333%;
  }
  [class*="l-5of12"] {
    width: 41.66667%;
  }
  [class*="l-2of12"] {
    width: 16.66667%;
  }
  [class*="l-1of12"] {
    width: 8.33333%;
  }
  [class*="l-10of11"] {
    width: 90.90909%;
  }
  [class*="l-9of11"] {
    width: 81.81818%;
  }
  [class*="l-8of11"] {
    width: 72.72727%;
  }
  [class*="l-7of11"] {
    width: 63.63636%;
  }
  [class*="l-6of11"] {
    width: 54.54545%;
  }
  [class*="l-5of11"] {
    width: 45.45455%;
  }
  [class*="l-4of11"] {
    width: 36.36364%;
  }
  [class*="l-3of11"] {
    width: 27.27273%;
  }
  [class*="l-2of11"] {
    width: 18.18182%;
  }
  [class*="l-1of11"] {
    width: 9.09091%;
  }
  [class*="l-9of10"] {
    width: 90%;
  }
  [class*="l-8of10"] {
    width: 80%;
  }
  [class*="l-7of10"] {
    width: 70%;
  }
  [class*="l-6of10"] {
    width: 60%;
  }
  [class*="l-4of10"] {
    width: 40%;
  }
  [class*="l-3of10"] {
    width: 30%;
  }
  [class*="l-2of10"] {
    width: 20%;
  }
  [class*="l-1of10"] {
    width: 10%;
  }
  [class*="l-8of9"] {
    width: 88.88889%;
  }
  [class*="l-7of9"] {
    width: 77.77778%;
  }
  [class*="l-5of9"] {
    width: 55.55556%;
  }
  [class*="l-4of9"] {
    width: 44.44444%;
  }
  [class*="l-2of9"] {
    width: 22.22222%;
  }
  [class*="l-1of9"] {
    width: 11.11111%;
  }
  [class*="l-7of8"] {
    width: 87.5%;
  }
  [class*="l-5of8"] {
    width: 62.5%;
  }
  [class*="l-3of8"] {
    width: 37.5%;
  }
  [class*="l-1of8"] {
    width: 12.5%;
  }
  [class*="l-6of7"] {
    width: 85.71429%;
  }
  [class*="l-5of7"] {
    width: 71.42857%;
  }
  [class*="l-4of7"] {
    width: 57.14286%;
  }
  [class*="l-3of7"] {
    width: 42.85714%;
  }
  [class*="l-2of7"] {
    width: 28.57143%;
  }
  [class*="l-1of7"] {
    width: 14.28571%;
  }
  [class*="l-5of6"] {
    width: 83.33333%;
  }
  [class*="l-1of6"] {
    width: 16.66667%;
  }
  [class*="l-4of5"] {
    width: 80%;
  }
  [class*="l-3of5"] {
    width: 60%;
  }
  [class*="l-2of5"] {
    width: 40%;
  }
  [class*="l-1of5"] {
    width: 20%;
  }
  /*

Media Grid

The Media Grid allows you to place a grid of photos or videos (catalog or 
retail products, etc.) without floating them, alleviating the need to concern 
yourself with clearing the floats with rows should an object extend further 
than another. Also, because they are not floating, it allows you to align 
the entire group center, making sure any "orphaned" grid entries are centered.

The syntax is simply the same as the regular responsive grid system, except
the row class has a `--flex` modifier.

````media-grid
<ul class="gs-halves gm-thirds gl-quarters">
    <li>
        <figure class="figure">
            <img src="http://placehold.it/400">
            <figcaption>Alderaan is peaceful. We have no weapons.</figcaption>
        </figure>
    </li>
    <li>
        <figure class="figure">
            <img src="http://placehold.it/400">
        </figure>
    </li>
    <li>
        <figure class="figure">
            <img src="http://placehold.it/400">
            <figcaption>Alderaan is peaceful. We have no weapons.</figcaption>
        </figure>
    </li>
    <li>
        <figure class="figure">
            <img src="http://placehold.it/400">
        </figure>
    </li>
    <li>
        <figure class="figure">
            <img src="http://placehold.it/400">
            <figcaption>Alderaan is peaceful. We have no weapons.</figcaption>
        </figure>
    </li>
    <li>
        <figure class="figure">
            <img src="http://placehold.it/400">
        </figure>
    </li>
    <li>
        <figure class="figure">
            <img src="http://placehold.it/400">
        </figure>
    </li>
</ul>
````

*/
  .gl-row--flex,
  .gl-quarters,
  .gl-thirds,
  .gl-halves {
    letter-spacing: -0.31em;
    text-rendering: optimizespeed;
  }
  .gl-row--flex > [class*="gcl"],
  .gl-quarters > *,
  .gl-thirds > *,
  .gl-halves > * {
    float: none;
    display: inline-block;
    letter-spacing: normal;
    word-spacing: normal;
    vertical-align: top;
    text-rendering: auto;
  }
  .opera-only :-o-prefocus,
  .gl-row--flex,
  .gl-quarters,
  .gl-thirds,
  .gl-halves {
    word-spacing: -0.43em;
  }
}
/*

Off-Canvas Trigger (Small Screens Only)

The Off-Canvas Trigger is a simple way of pushing a column of content
off-canvas and sliding it on upon trigger. In this case, the `is-active` 
class is placed on the `.off-canvas` wrapping element so that it can 
adjust both child elements.

@TODO: Adjust for IE9?
@TODO: Show better example w/ Reveal plugin

    <div class="off-canvas--left">
        <div class="canvas__primary">
            ...
        </div>
        <div class="canvas__secondary">
            ...
        </div>
    </div>

*/
.js [class*="off-canvas--"] {
  /* Positioning */
  position: relative;
  /* Display & Box Model */
  overflow: hidden;
}
.js [class*="off-canvas--"].is-active > .canvas__primary {
  -webkit-transform: translate3d(0, 0, 0);
  -moz-transform: translate3d(0, 0, 0);
  -o-transform: translate3d(0, 0, 0);
  -ms-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0);
}
.js [class*="off-canvas--"].is-active > .canvas__primary,
.js [class*="off-canvas--"].was-active > .canvas__primary,
.js [class*="off-canvas--"].is-active > .canvas__secondary,
.js [class*="off-canvas--"].was-active > .canvas__secondary {
  -webkit-transition: all 0.15s cubic-bezier(0.215, 0.61, 0.355, 1);
  -moz-transition: all 0.15s cubic-bezier(0.215, 0.61, 0.355, 1);
  -o-transition: all 0.15s cubic-bezier(0.215, 0.61, 0.355, 1);
  transition: all 0.15s cubic-bezier(0.215, 0.61, 0.355, 1);
}
.js .canvas__secondary {
  -webkit-transform: translate3d(0, 0, 0);
  -moz-transform: translate3d(0, 0, 0);
  -o-transform: translate3d(0, 0, 0);
  -ms-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0);
}
.js .off-canvas--left > .canvas__primary,
.js .off-canvas--right > .canvas__primary,
.js .off-canvas--left > .canvas__secondary,
.js .off-canvas--right > .canvas__secondary {
  min-height: 100vh;
}
.js .off-canvas--left > .canvas__secondary,
.js .off-canvas--right > .canvas__secondary {
  height: 100vh;
  overflow: hidden;
  overflow-y: auto;
}
.js .off-canvas--left.is-active,
.js .off-canvas--right.is-active,
.js .off-canvas--left.is-active > .canvas_primary,
.js .off-canvas--right.is-active > .canvas_primary {
  height: 100vh;
  overflow: hidden;
}
.js .off-canvas--right.is-active > .canvas__secondary {
  -webkit-transform: translate3d(-100%, 0, 0);
  -moz-transform: translate3d(-100%, 0, 0);
  -o-transform: translate3d(-100%, 0, 0);
  -ms-transform: translate3d(-100%, 0, 0);
  transform: translate3d(-100%, 0, 0);
}
.js .off-canvas--right > .canvas__primary {
  -webkit-transform: translate3d(100%, 0, 0);
  -moz-transform: translate3d(100%, 0, 0);
  -o-transform: translate3d(100%, 0, 0);
  -ms-transform: translate3d(100%, 0, 0);
  transform: translate3d(100%, 0, 0);
  /* Positioning */
  float: left;
  /* Display & Box Model */
  margin-left: -100%;
}
.js .off-canvas--right > .canvas__secondary {
  -webkit-transform: translate3d(0, 0, 0);
  -moz-transform: translate3d(0, 0, 0);
  -o-transform: translate3d(0, 0, 0);
  -ms-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0);
  /* Positioning */
  float: right;
  /* Display & Box Model */
  margin-right: -100%;
}
.js .off-canvas--left.is-active > .canvas__secondary {
  -webkit-transform: translate3d(100%, 0, 0);
  -moz-transform: translate3d(100%, 0, 0);
  -o-transform: translate3d(100%, 0, 0);
  -ms-transform: translate3d(100%, 0, 0);
  transform: translate3d(100%, 0, 0);
}
.js .off-canvas--left > .canvas__primary {
  -webkit-transform: translate3d(-100%, 0, 0);
  -moz-transform: translate3d(-100%, 0, 0);
  -o-transform: translate3d(-100%, 0, 0);
  -ms-transform: translate3d(-100%, 0, 0);
  transform: translate3d(-100%, 0, 0);
  /* Positioning */
  float: right;
  /* Display & Box Model */
  margin-right: -100%;
}
.js .off-canvas--left > .canvas__secondary {
  -webkit-transform: translate3d(0, 0, 0);
  -moz-transform: translate3d(0, 0, 0);
  -o-transform: translate3d(0, 0, 0);
  -ms-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0);
  /* Positioning */
  float: left;
  /* Display & Box Model */
  margin-left: -100%;
}
.js .off-canvas--top,
.js .off-canvas--bottom {
  /* Positioning */
  position: relative;
  /* Display & Box Model */
  min-height: 100vh;
}
.js .off-canvas--top.is-active,
.js .off-canvas--bottom.is-active {
  height: 100vh;
  overflow: hidden;
}
.js .off-canvas--top.is-active > .canvas__primary,
.js .off-canvas--bottom.is-active > .canvas__primary {
  /* Positioning */
  position: absolute;
  top: 0;
  right: 0;
  left: 0;
  /* Display & Box Model */
  height: 100vh;
  overflow: hidden;
}
.js .off-canvas--top.is-active > .canvas__secondary,
.js .off-canvas--bottom.is-active > .canvas__secondary {
  -webkit-transform: translate3d(0, 0, 0);
  -moz-transform: translate3d(0, 0, 0);
  -o-transform: translate3d(0, 0, 0);
  -ms-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0);
  /* Display & Box Model */
  overflow: auto;
}
.js .off-canvas--top > .canvas__secondary,
.js .off-canvas--bottom > .canvas__secondary {
  /* Positioning */
  position: absolute;
  left: 0;
  right: 0;
  /* Display & Box Model */
  width: 100%;
  height: 80vh;
  overflow: hidden;
}
.js .off-canvas--top.is-active > .canvas__primary {
  -webkit-transform: translate3d(0, 80vh, 0);
  -moz-transform: translate3d(0, 80vh, 0);
  -o-transform: translate3d(0, 80vh, 0);
  -ms-transform: translate3d(0, 80vh, 0);
  transform: translate3d(0, 80vh, 0);
}
.js .off-canvas--top > .canvas__secondary {
  -webkit-transform: translate3d(0, -100%, 0);
  -moz-transform: translate3d(0, -100%, 0);
  -o-transform: translate3d(0, -100%, 0);
  -ms-transform: translate3d(0, -100%, 0);
  transform: translate3d(0, -100%, 0);
  /* Positioning */
  top: 0;
}
.js .off-canvas--bottom.is-active > .canvas__primary {
  -webkit-transform: translate3d(0, -80vh, 0);
  -moz-transform: translate3d(0, -80vh, 0);
  -o-transform: translate3d(0, -80vh, 0);
  -ms-transform: translate3d(0, -80vh, 0);
  transform: translate3d(0, -80vh, 0);
}
.js .off-canvas--bottom > .canvas__secondary {
  -webkit-transform: translate3d(0, 100%, 0);
  -moz-transform: translate3d(0, 100%, 0);
  -o-transform: translate3d(0, 100%, 0);
  -ms-transform: translate3d(0, 100%, 0);
  transform: translate3d(0, 100%, 0);
  /* Positioning */
  bottom: 0;
}
.js .canvas__primary,
.js .canvas__secondary {
  /* Display & Box Model */
  width: 100%;
}
.js .canvas__primary {
  z-index: 1;
}
.js .canvas__secondary {
  z-index: 2;
}
@media all {
  .js [class*="off-canvas--"].is-active > .canvas__primary,
  .js [class*="off-canvas--"].was-active > .canvas__primary,
  .js [class*="off-canvas--"].is-active > .canvas__secondary,
  .js [class*="off-canvas--"].was-active > .canvas__secondary {
    -webkit-transition: all 0.25s cubic-bezier(0.215, 0.61, 0.355, 1);
    -moz-transition: all 0.25s cubic-bezier(0.215, 0.61, 0.355, 1);
    -o-transition: all 0.25s cubic-bezier(0.215, 0.61, 0.355, 1);
    transition: all 0.25s cubic-bezier(0.215, 0.61, 0.355, 1);
  }
  .js .off-canvas--right > .canvas__secondary,
  .js .off-canvas--left > .canvas__secondary {
    width: 70%;
  }
  .js .off-canvas--right.is-active > .canvas__primary {
    -webkit-transform: translate3d(30%, 0, 0);
    -moz-transform: translate3d(30%, 0, 0);
    -o-transform: translate3d(30%, 0, 0);
    -ms-transform: translate3d(30%, 0, 0);
    transform: translate3d(30%, 0, 0);
  }
  .js .off-canvas--right > .canvas__secondary {
    margin-right: -70%;
  }
  .js .off-canvas--left.is-active > .canvas__primary {
    -webkit-transform: translate3d(-30%, 0, 0);
    -moz-transform: translate3d(-30%, 0, 0);
    -o-transform: translate3d(-30%, 0, 0);
    -ms-transform: translate3d(-30%, 0, 0);
    transform: translate3d(-30%, 0, 0);
  }
  .js .off-canvas--left > .canvas__secondary {
    margin-left: -70%;
  }
}
@media all {
  .js .off-canvas--right > .canvas__secondary,
  .js .off-canvas--left > .canvas__secondary {
    width: 60%;
  }
  .js .off-canvas--right.is-active > .canvas__primary {
    -webkit-transform: translate3d(40%, 0, 0);
    -moz-transform: translate3d(40%, 0, 0);
    -o-transform: translate3d(40%, 0, 0);
    -ms-transform: translate3d(40%, 0, 0);
    transform: translate3d(40%, 0, 0);
  }
  .js .off-canvas--right > .canvas__secondary {
    margin-right: -60%;
  }
  .js .off-canvas--left.is-active > .canvas__primary {
    -webkit-transform: translate3d(-40%, 0, 0);
    -moz-transform: translate3d(-40%, 0, 0);
    -o-transform: translate3d(-40%, 0, 0);
    -ms-transform: translate3d(-40%, 0, 0);
    transform: translate3d(-40%, 0, 0);
  }
  .js .off-canvas--left > .canvas__secondary {
    margin-left: -60%;
  }
}
.js [class*="slide-canvas--"] {
  -webkit-transition: all 0.25s cubic-bezier(0.215, 0.61, 0.355, 1);
  -moz-transition: all 0.25s cubic-bezier(0.215, 0.61, 0.355, 1);
  -o-transition: all 0.25s cubic-bezier(0.215, 0.61, 0.355, 1);
  transition: all 0.25s cubic-bezier(0.215, 0.61, 0.355, 1);
  /* Positioning */
  position: fixed;
  z-index: 110;
  /* Display & Box Model */
  overflow: auto;
  overflow-x: hidden;
}
.js [class*="slide-canvas--"].is-revealed {
  -webkit-transform: translate3d(0, 0, 0);
  -moz-transform: translate3d(0, 0, 0);
  -o-transform: translate3d(0, 0, 0);
  -ms-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0);
}
.js .slide-canvas--left,
.js .slide-canvas--right {
  /* Positioning */
  top: 0;
  bottom: 0;
  /* Display & Box Model */
  width: 80%;
}
@media all {
  .js .slide-canvas--left,
  .js .slide-canvas--right {
    width: 33%;
  }
}
@media all {
  .js .slide-canvas--left,
  .js .slide-canvas--right {
    width: 25%;
  }
}
@media all and (min-width: 77.5em) {
  .js .slide-canvas--left,
  .js .slide-canvas--right {
    width: 20%;
  }
}
.js .slide-canvas--left {
  -webkit-transform: translate3d(-100%, 0, 0);
  -moz-transform: translate3d(-100%, 0, 0);
  -o-transform: translate3d(-100%, 0, 0);
  -ms-transform: translate3d(-100%, 0, 0);
  transform: translate3d(-100%, 0, 0);
  /* Positioning */
  left: 0;
}
.js .slide-canvas--right {
  -webkit-transform: translate3d(100%, 0, 0);
  -moz-transform: translate3d(100%, 0, 0);
  -o-transform: translate3d(100%, 0, 0);
  -ms-transform: translate3d(100%, 0, 0);
  transform: translate3d(100%, 0, 0);
  /* Positioning */
  right: 0;
}
.js .slide-canvas--top,
.js .slide-canvas--bottom {
  /* Positioning */
  left: 0;
  right: 0;
  /* Display & Box Model */
  height: 90%;
}
@media all {
  .js .slide-canvas--top,
  .js .slide-canvas--bottom {
    height: 33%;
  }
}
@media all {
  .js .slide-canvas--top,
  .js .slide-canvas--bottom {
    height: 25%;
  }
}
@media all and (min-width: 77.5em) {
  .js .slide-canvas--top,
  .js .slide-canvas--bottom {
    height: 20%;
  }
}
.js .slide-canvas--top {
  -webkit-transform: translate3d(0, -100%, 0);
  -moz-transform: translate3d(0, -100%, 0);
  -o-transform: translate3d(0, -100%, 0);
  -ms-transform: translate3d(0, -100%, 0);
  transform: translate3d(0, -100%, 0);
  /* Positioning */
  top: 0;
}
.js .slide-canvas--bottom {
  -webkit-transform: translate3d(0, 100%, 0);
  -moz-transform: translate3d(0, 100%, 0);
  -o-transform: translate3d(0, 100%, 0);
  -ms-transform: translate3d(0, 100%, 0);
  transform: translate3d(0, 100%, 0);
  /* Positioning */
  bottom: 0;
}
.overflow-list {
  overflow: auto;
  -webkit-overflow-scrolling: touch;
  white-space: nowrap;
}
.overflow-list__item {
  display: inline-block;
  white-space: normal;
  vertical-align: top;
  position: relative;
}
@media all {
  .overflow-list--until-medium {
    overflow: visible;
    white-space: normal;
  }
}
@media all {
  .overflow-list--until-large {
    overflow: visible;
    white-space: normal;
  }
}
@media all and (min-width: 77.5em) {
  .overflow-list--until-x-large {
    overflow: visible;
    white-space: normal;
  }
}
/*

Tables

*/
/*

Default Tables

Simple, clean default styles. Just mark it up like a normal table.

Undoes table to more of a definition list on smaller viewports.

See: http://codepen.io/aarongustafson/pen/ucJGv

````tables
<table>
    <thead>
        <tr>
            <th scope="col">#</th>
            <th scope="col">First Name</th>
            <th scope="col">Last Name</th>
            <th scope="col">Language</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td data-th="#">1</td>
            <td data-th="First Name">Some</td>
            <td data-th="Last Name">One</td>
            <td data-th="Language">English</td>
        </tr>
        <tr>
            <td data-th="#">2</td>
            <td data-th="First Name">Joe</td>
            <td data-th="Last Name">Sixpack</td>
            <td data-th="Language">English</td>
        </tr>
        <tr>
            <td data-th="#">3</td>
            <td data-th="First Name">Stu</td>
            <td data-th="Last Name">Dent</td>
            <td data-th="Language">Code</td>
        </tr>
    </tbody>
</table>
````

*/
table {
  width: 100%;
  max-width: 100%;
}
th,
td {
  padding: 0.71428571em 0.64285714em;
  text-align: left;
}
th {
  padding-top: 0.71428571em;
}
@media all and (max-width: 47.9375em) {
  table {
    display: block;
    width: 100%;
  }
  tbody,
  tr,
  th,
  td {
    border: 0;
    display: block;
    padding: 0;
    text-align: left;
    white-space: normal;
  }
  thead {
    display: none;
    visibility: hidden;
  }
  tr {
    margin-top: 1.4285714285714286em;
  }
  td[data-th]:before {
    content: attr(data-th) ":\00A0";
    display: inline-block;
    font-weight: bold;
  }
  td:empty {
    display: none;
  }
}
@media all {
  th,
  td {
    padding: 0.71428571em 1.28571429em;
  }
}
/*

Panel

Used to provide messaging to the user, whether it be direct or through calls to 
action. The panel typically indicates a visual separation and implied 
sub-grouping of its content.

```panels
<div class="panel">
    <h3>This is a Panel</h3>
    <p>This is a <a href="#">feedback message</a> for the user.</p>
    <p><a href="#" class="btn">User Action</a></p>
</div>
<div class="panel">
    <p>This is a feedback panel with no heading.</p>
</div>
````

*/
.panel,
[class*="panel-"],
[class*="-panel"] {
  margin-top: 1.4285714285714286em;
  padding: 1.42857143em;
  background-color: #f2f1f1;
}
.panel > :first-child,
[class*="panel-"] > :first-child,
[class*="-panel"] > :first-child {
  margin-top: 0;
}
.panel h1,
[class*="panel-"] h1,
[class*="-panel"] h1,
.panel h2,
[class*="panel-"] h2,
[class*="-panel"] h2,
.panel h3,
[class*="panel-"] h3,
[class*="-panel"] h3,
.panel h4,
[class*="panel-"] h4,
[class*="-panel"] h4,
.panel h5,
[class*="panel-"] h5,
[class*="-panel"] h5,
.panel h6,
[class*="panel-"] h6,
[class*="-panel"] h6 {
  color: inherit;
}
[class*="panel--thin"] {
  padding: 0.71428571em;
}
/*

Alert Panel

This variation of the standard `.panel` is used specifically for delivering 
direct messages to the user, whether they be informative, complimentary, 
or preventative.

````info-alert-panels
<div class="alert-panel--info">
    <h3>This is a Panel</h3>
    <p>This is an <a href="#">alert message</a> for the user.</p>
    <p><a href="#" class="btn">User Action</a></p>
</div>
<div class="alert-panel--info">
    <p>This is an alert panel with no heading.</p>
</div>
````

*/
/*

````error-alert-panels
<div class="alert-panel--error">
    <h3>This is a Panel</h3>
    <p>This is an <a href="#">alert message</a> for the user.</p>
    <p><a href="#" class="btn">User Action</a></p>
</div>
<div class="alert-panel--error">
    <p>This is an alert panel with no heading.</p>
</div>
````

*/
/*

````success-alert-panels
<div class="alert-panel--success">
    <h3>This is a Panel</h3>
    <p>This is an <a href="#">alert message</a> for the user.</p>
    <p><a href="#" class="btn">User Action</a></p>
</div>
<div class="alert-panel--success">
    <p>This is an alert panel with no heading.</p>
</div>
````

*/
[class*="alert-panel"] {
  color: #fff;
}
.alert-panel {
  background: #13496d;
}
.alert-panel--error {
  background: #e63c4d;
}
.alert-panel--success {
  background: #72bc44;
}
/*

WYSIWYG

Though we keep our styles as flexible and modular as possible, there may be 
times, as when using a WYSIWYG editor, when some styles need to be baked in. 
Here, we specify a `.wysiwyg` class that wraps around that content, and 
hardcode some of those styles

    <div class="wysiwyg">
        [WYSIWYG Content]
    </div>

*/
.wysiwyg h1 {
  margin-top: 0;
}
.wysiwyg h2,
.wysiwyg h3,
.wysiwyg h4,
.wysiwyg h5,
.wysiwyg h6 {
  margin-top: 1.5em;
}
/**
 * Responsive Breakpoints
 */
/**
 * Base
 */
/**
 * Base & Small Only
 */
/**
 * Small
 */
/**
 * Medium Only
 */
/**
 * Medium
 */
/**
 * Large
 */
/**
 * Extra Large
 */
/**
 * Print
 */
@media print {
  * {
    background: transparent !important;
    color: black !important;
    box-shadow: none !important;
    text-shadow: none !important;
  }
  html {
    font: 12pt/1.5em Georgia, "Times New Roman", Times, serif;
  }
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-weight: bold;
    line-height: 1.1em;
    margin-bottom: 0.5em;
    margin-top: 1em;
    page-break-after: avoid;
    orphans: 3;
    widows: 3;
  }
  li h1,
  li h2,
  li h3,
  li h4,
  li h5,
  li h6 {
    margin-top: 0;
  }
  h1 {
    font-size: 24pt;
  }
  h2 {
    font-size: 21pt;
  }
  h3 {
    font-size: 18pt;
  }
  h4 {
    font-size: 16pt;
  }
  h5 {
    font-size: 14pt;
  }
  h6 {
    font-size: 12pt;
  }
  blockquote,
  p,
  ul,
  ol,
  dl,
  figure,
  img {
    margin-bottom: 1em;
  }
  figure img {
    margin-bottom: 0;
  }
  ul,
  ol,
  dd {
    margin-left: 3em;
  }
  pre,
  blockquote {
    border-left: 0.5em solid #999;
    padding-left: 1.5em;
    page-break-inside: avoid;
  }
  a,
  a:visited {
    text-decoration: underline;
  }
  a[href]:after {
    content: " (" attr(href) ")";
  }
  abbr[title]:after {
    content: " (" attr(title) ")";
  }
  a[href^="javascript:"]:after,
  a[href^="#"]:after {
    content: "";
  }
  figcaption {
    text-transform: uppercase;
    font-size: 10pt;
  }
  strong {
    font-weight: bold;
  }
  em {
    font-style: italic;
  }
  thead {
    display: table-header-group;
  }
  tr,
  img {
    page-break-inside: avoid;
  }
  img {
    max-width: 100% !important;
  }
  form,
  video,
  nav {
    display: none !important;
  }
  @page {
    margin: 2cm;
  }
}
/**
 * Prototype Styles
 * REMOVE WHEN BEGINNING PRODUCTION
 */
/*

Config

*/
/*

Font Faces

*/
/* 

Applied Font Faces

These classes based on every typeface used on the project, including many which were 
embedded via `@font-face` declarations.

*/
.lato-light,
.lato-regular,
.lato-bold,
.lato-black,
h1,
h2,
h3,
h4,
h5,
h6,
.primary-heading,
.secondary-heading,
.tertiary-heading,
body,
.body-text,
a,
.link,
[class*="btn"],
.tabs nav > ul a,
.tabs__list--x a,
.tabs__list--x--forceful a,
.list--x--pgs a[href],
.input-hint,
.input-desc,
[class*="input-alert"],
input,
textarea {
  font-family: "Lato", Helvetica, Arial, "Arial Unicode", "Lucida Sans Unicode", sans-serif;
}
.lato-light,
.secondary-heading {
  font-weight: 300;
}
.lato-regular,
body,
.body-text,
.input-hint,
.input-desc,
[class*="input-alert"],
input,
textarea {
  font-weight: 400;
}
.lato-bold,
h1,
h2,
h3,
h4,
h5,
h6,
.primary-heading,
a,
.link,
[class*="btn"],
.tabs nav > ul a,
.tabs__list--x a,
.tabs__list--x--forceful a,
.list--x--pgs a[href] {
  font-weight: 700;
}
.lato-black,
.tertiary-heading {
  font-weight: 900;
}
/*

Type Styles

*/
h1,
h2,
h3,
h4,
h5,
h6,
.primary-heading,
.secondary-heading {
  color: #1f75ae;
}
.tertiary-heading {
  color: #a9a6a7;
  text-transform: uppercase;
}
/*

Body Text

A quick class to help make any element's text look like the site's default body text.

*/
dt,
th,
.input-label,
strong {
  font-weight: 700;
}
/*

Blockquote

*/
.blockquote {
  padding-left: 1.28571429em;
  font-size: 128%;
  color: #a9a6a7;
  border-left: 7px solid #ddd;
}
/*

Forms

*/
input,
textarea {
  padding: 0.71428571em 1.28571429em;
  background: #fff;
  border: 1px solid #ddd;
  line-height: normal;
  -webkit-border-radius: 0.21428571em;
  -moz-border-radius: 0.21428571em;
  -o-border-radius: 0.21428571em;
  border-radius: 0.21428571em;
  -webkit-box-shadow: inset 0 0.21428571em 0.21428571em rgba(0, 0, 0, 0.05);
  -moz-box-shadow: inset 0 0.21428571em 0.21428571em rgba(0, 0, 0, 0.05);
  -o-box-shadow: inset 0 0.21428571em 0.21428571em rgba(0, 0, 0, 0.05);
  box-shadow: inset 0 0.21428571em 0.21428571em rgba(0, 0, 0, 0.05);
}
input:hover,
textarea:hover,
input:focus,
textarea:focus,
input:active,
textarea:active,
input.is-current,
textarea.is-current {
  border-color: #837f81;
}
textarea {
  /* Display & Box Model */
  min-height: 10.5em;
}
/*

Buttons

*/
[class*="btn"] {
  -webkit-border-radius: 0.21428571em;
  -moz-border-radius: 0.21428571em;
  -o-border-radius: 0.21428571em;
  border-radius: 0.21428571em;
  background-color: #f7f7f9;
  border: 1px solid #cfcbca;
}
[class*="btn"],
[class*="btn"]:hover,
[class*="btn"]:focus,
[class*="btn"].is-current {
  color: #262626;
}
[class*="btn"]:hover,
[class*="btn"]:focus,
[class*="btn"].is-current {
  background-color: #e8e8ee;
  border-color: #a9a6a7;
}
.btn--blue,
.btn--primary {
  background-color: #1f75ae;
  border-color: #13496d;
}
.btn--blue,
.btn--primary,
.btn--blue:hover,
.btn--primary:hover,
.btn--blue:focus,
.btn--primary:focus,
.btn--blue.is-current,
.btn--primary.is-current {
  color: #fff;
}
.btn--blue:hover,
.btn--primary:hover,
.btn--blue:focus,
.btn--primary:focus,
.btn--blue.is-current,
.btn--primary.is-current {
  background-color: #13496d;
  border-color: #081e2c;
}
.btn--red,
.btn--danger {
  background-color: #e63c4d;
  border-color: #bd1829;
}
.btn--red,
.btn--danger,
.btn--red:hover,
.btn--danger:hover,
.btn--red:focus,
.btn--danger:focus,
.btn--red.is-current,
.btn--danger.is-current {
  color: #fff;
}
.btn--red:hover,
.btn--danger:hover,
.btn--red:focus,
.btn--danger:focus,
.btn--red.is-current,
.btn--danger.is-current {
  background-color: #bd1829;
  border-color: #79101a;
}
/*

Panels

````panels-alt
<div class="panel--alt">
    <h3>This is a Panel</h3>
    <p>This is a <a href="#">feedback message</a> for the user.</p>
    <p><a href="#" class="btn">User Action</a></p>
</div>
<div class="panel--alt">
    <p>This is a feedback panel with no heading.</p>
</div>
````

````panels-inverse
<div class="panel--inverse">
    <h3>This is a Panel</h3>
    <p>This is a <a href="#">feedback message</a> for the user.</p>
    <p><a href="#" class="btn">User Action</a></p>
</div>
<div class="panel--inverse">
    <p>This is a feedback panel with no heading.</p>
</div>
````

*/
.panel,
[class*="panel-"],
[class*="-panel"] {
  -webkit-border-radius: 0.21428571em;
  -moz-border-radius: 0.21428571em;
  -o-border-radius: 0.21428571em;
  border-radius: 0.21428571em;
  color: #262626;
  border: 1px solid #cfcbca;
  background-color: #f7f7f9;
}
.panel--alt {
  background-color: #fff;
}
.panel--inverse {
  color: #fff;
  background-color: #1f75ae;
  border-color: #1f75ae;
}
.panel--inverse h1,
.panel--inverse h2,
.panel--inverse h3,
.panel--inverse h4,
.panel--inverse h5,
.panel--inverse h6 {
  color: inherit;
}
.panel--inverse a,
.panel--inverse a:hover,
.panel--inverse a:focus {
  color: inherit;
}
.panel--inverse a:hover,
.panel--inverse a:focus {
  color: #cfcbca;
}
.panel--inverse .btn,
.panel--inverse .btn:hover,
.panel--inverse .btn:focus {
  color: #262626;
}
.alert-panel--info {
  border-color: #00a4d8;
  background-color: #eaf7ff;
}
.alert-panel--error {
  border-color: #e63c4d;
  background-color: #f6e1df;
}
.alert-panel--success {
  border-color: #72bc44;
  background-color: #f4faf2;
}
/*

Figures

*/
.figure > a,
[class*="figure--"] > a {
  padding: 0.35714286em;
  border: 1px solid #cfcdcd;
}
.figure > a:hover,
[class*="figure--"] > a:hover,
.figure > a:focus,
[class*="figure--"] > a:focus {
  border-color: #3d9ddc;
}
.figure figcaption,
.figcaption {
  padding: 0.71428571em 1.28571429em;
}
/*

List Modules

*/
/*

Nav Bar

A quick navigation bar, typically good for prototyping the main menu of a site.

````nav-bar
<nav class="nav-bar--menu" role="navigation">
    <h3 class="nav-bar__title js-expand"
     id="reveal-main-nav"
     data-reveal="main-nav-list">
        <svg class="icon"><use xlink:href="#rows"></svg>
        <b class="button-label">Main Menu</b>
    </h3>
    <ul class="nav-bar__list--x--forceful expand__target" id="main-nav-list">
        <li>
            <a class="nav-bar__link is-current" href="#">
                Current Nav Link
            </a>
        </li>
        <li>
            <a class="nav-bar__link" href="#">
                Nav Link
            </a>
        </li>
        <li>
            <a class="nav-bar__link" href="#">
                Nav Link
            </a>
        </li>
    </ul>
</nav>
````

*/
.nav-bar__title {
  margin: 0;
  padding: 0.71428571em 4%;
  display: inline-block;
  color: #fff;
  background: #1f75ae;
  cursor: pointer;
}
.nav-bar__title:hover,
.nav-bar__title:focus,
.nav-bar__title.is-expanded {
  background: #024f82;
}
.nav-bar__link {
  color: #fff;
  text-decoration: none;
  padding: 0.71428571em 4%;
}
.nav-bar__link:hover,
.nav-bar__link:focus,
.nav-bar__link.is-current {
  color: #fff;
  background: #024f82;
}
[class*="nav-bar__list"] {
  margin: 0;
  background: #1f75ae;
}
[class*="nav-bar__list"] ul {
  margin: 0;
}
@media all {
  [class*="nav-bar__list"] > li,
  [class*="nav-bar__list"] [class*="list--x"] > li,
  [class*="nav-bar__list"] .tabs nav > ul > li {
    width: 50%;
  }
  [class*="nav-bar__list"] > li:nth-child( odd ),
  [class*="nav-bar__list"] [class*="list--x"] > li:nth-child( odd ),
  [class*="nav-bar__list"] .tabs nav > ul > li:nth-child( odd ) {
    clear: both;
  }
  .nav-bar__link {
    padding: 0.71428571em 1.28571429em;
  }
}
@media all {
  .nav-bar__link {
    padding: 1.42857143em 1.28571429em;
  }
  .js .nav-bar--menu .nav-bar__title {
    display: none;
  }
  .js .nav-bar--menu [class*="nav-bar__list"] {
    max-height: 999px;
  }
  [class*="nav-bar__list"] {
    background: #1f75ae;
  }
  [class*="nav-bar__list"] > li,
  [class*="nav-bar__list"] [class*="list--x"] > li,
  [class*="nav-bar__list"] .tabs nav > ul > li {
    width: auto;
  }
  [class*="nav-bar__list"] > li:nth-child( odd ),
  [class*="nav-bar__list"] [class*="list--x"] > li:nth-child( odd ),
  [class*="nav-bar__list"] .tabs nav > ul > li:nth-child( odd ) {
    clear: none;
  }
}
/*

Vertical Nav

````vertical-nav
<ul class="nav--vert">
    <li>
        <a href="#">Nav Link</a>
    </li>
    <li>
        <a href="#" class="is-current">Current Nav Link</a>
        <ul>
            <li>
                <a href="#">Nav Link</a>
            </li>
            <li>
                <a href="#">Nav Link</a>
            </li>
            <li>
                <a href="#" class="is-current">Current Nav Link</a>
            </li>
            <li>
                <a href="#">Nav Link</a>
            </li>
        </ul>
    </li>
    <li>
        <a href="#">Nav Link</a>
    </li>
    <li>
        <a href="#">Nav Link</a>
    </li>
    <li>
        <a href="#">Nav Link</a>
    </li>
</ul>
````

*/
.nav--vert a {
  color: #024f82;
  padding: 0.35714286em 1.28571429em;
  display: block;
  text-decoration: none;
}
.nav--vert a:hover,
.nav--vert a:focus,
.nav--vert .is-current {
  background-color: #eaf7ff;
}
.nav--vert li ul {
  margin: 0;
  padding: 0 0 0 1.28571429em;
}
.nav--vert li ul li {
  list-style: none outside none;
}
/*

Breadcrumb

*/
.breadcrumb__list--x {
  text-transform: capitalize;
}
.breadcrumb li:before {
  content: "/";
  margin-right: 0.64285714em;
}
.breadcrumb li:first-child:before {
  content: "";
  margin: 0;
}
/*

Button List

*/
[class*="button-list--x"] li:not(:first-child) a {
  -webkit-border-bottom-left-radius: 0;
  -webkit-border-top-left-radius: 0;
  -moz-border-radius-bottomleft: 0;
  -moz-border-radius-topleft: 0;
  -o-border-bottom-left-radius: 0;
  -o-border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-top-left-radius: 0;
}
[class*="button-list--x"] li:not(:last-child) a {
  -webkit-border-bottom-right-radius: 0;
  -webkit-border-top-right-radius: 0;
  -moz-border-radius-bottomright: 0;
  -moz-border-radius-topright: 0;
  -o-border-bottom-right-radius: 0;
  -o-border-top-right-radius: 0;
  border-bottom-right-radius: 0;
  border-top-right-radius: 0;
}
[class*="button-list--x"] a {
  border-left-width: 0;
}
[class*="button-list--x"] li:first-child a {
  border-left-width: 1px;
}
/*

Tabs

*/
.tabs {
  margin-top: 1.4285714285714286em;
}
.tabs nav > ul,
.tabs__list--x,
.tabs__list--x--forceful {
  border-bottom: 1px solid #ddd;
  margin-bottom: 1.42857143em;
}
.tabs nav > ul a,
.tabs__list--x a,
.tabs__list--x--forceful a {
  /* Extends .lato-bold */
  -webkit-border-top-right-radius: 0.21428571em;
  -webkit-border-top-left-radius: 0.21428571em;
  -moz-border-radius-topright: 0.21428571em;
  -moz-border-radius-topleft: 0.21428571em;
  -o-border-top-right-radius: 0.21428571em;
  -o-border-top-left-radius: 0.21428571em;
  border-top-right-radius: 0.21428571em;
  border-top-left-radius: 0.21428571em;
  padding: 0.71428571em 1.28571429em;
  color: #cfcbca;
  text-decoration: none;
  position: relative;
  bottom: -1px;
  z-index: 30;
  border: 1px solid transparent;
}
.tabs nav > ul a:hover,
.tabs__list--x a:hover,
.tabs__list--x--forceful a:hover,
.tabs nav > ul a:focus,
.tabs__list--x a:focus,
.tabs__list--x--forceful a:focus {
  color: #262626;
}
.tabs nav > ul .is-current,
.tabs__list--x .is-current,
.tabs__list--x--forceful .is-current {
  color: #262626;
  background-color: #fff;
  border-color: #cfcbca;
  border-bottom-color: transparent;
  z-index: 60;
}
.js.csstransitions .tabs > nav + *,
.js.csstransitions .tabs__section {
  -webkit-transition: height 0.3s cubic-bezier(0.215, 0.61, 0.355, 1);
  -moz-transition: height 0.3s cubic-bezier(0.215, 0.61, 0.355, 1);
  -o-transition: height 0.3s cubic-bezier(0.215, 0.61, 0.355, 1);
  transition: height 0.3s cubic-bezier(0.215, 0.61, 0.355, 1);
}
.tabs > nav + * > * > :first-child,
.tabs .tab > :first-child {
  margin-top: 0;
}
/*

Tables

*/
td[data-th]:before {
  /* Pretty */
  font-weight: 700;
}
@media all {
  th {
    border-bottom: 0.07142857em solid #ddd;
  }
  th + th,
  td + td {
    border-left: 0.07142857em solid #ddd;
  }
  tr + tr td {
    border-top: 0.07142857em solid #ddd;
  }
  tbody tr:nth-child( odd ),
  table > tr:nth-child( odd ) {
    background: #f7f7f9;
  }
}
/*

Messaging

*/
.bubble,
[class*="input-alert"] {
  margin: 0;
  padding: 0.71428571em;
  background-color: #fff;
  position: relative;
  -webkit-border-radius: 0.21428571em;
  -moz-border-radius: 0.21428571em;
  -o-border-radius: 0.21428571em;
  border-radius: 0.21428571em;
  -webkit-box-shadow: 0 0 0.5em rgba(0, 0, 0, 0.5);
  -moz-box-shadow: 0 0 0.5em rgba(0, 0, 0, 0.5);
  -o-box-shadow: 0 0 0.5em rgba(0, 0, 0, 0.5);
  box-shadow: 0 0 0.5em rgba(0, 0, 0, 0.5);
  -webkit-transition: opacity 0.15s linear;
  -moz-transition: opacity 0.15s linear;
  -o-transition: opacity 0.15s linear;
  transition: opacity 0.15s linear;
}
.bubble:after,
[class*="input-alert"]:after {
  position: absolute;
  border: 0.35714286em solid transparent;
  content: "";
  width: 0;
  height: 0;
  margin: 0;
  padding: 0;
  display: block;
}
.bubble.left-wisp:after,
.bubble.right-wisp:after,
[class*="input-alert"].left-wisp:after,
[class*="input-alert"].right-wisp:after {
  top: 50%;
  margin-top: -0.35714286em;
}
.bubble.left-wisp:after,
[class*="input-alert"].left-wisp:after {
  left: -0.71428571em;
  border-right-color: #fff;
}
.bubble.right-wisp:after,
[class*="input-alert"].right-wisp:after {
  right: -0.71428571em;
  border-left-color: #fff;
}
.bubble.top-wisp:after,
.bubble.bottom-wisp:after,
[class*="input-alert"].top-wisp:after,
[class*="input-alert"].bottom-wisp:after {
  left: 50%;
  margin-left: -0.35714286em;
}
.bubble.top-wisp:after,
[class*="input-alert"].top-wisp:after {
  top: -0.71428571em;
  border-bottom-color: #fff;
}
.bubble.bottom-wisp:after,
[class*="input-alert"].bottom-wisp:after {
  bottom: -0.71428571em;
  border-top-color: #fff;
}
/*

Input Alerts

*/
[class*="input-alert"] {
  -webkit-box-shadow: none;
  -moz-box-shadow: none;
  -o-box-shadow: none;
  box-shadow: none;
  padding: 0.35714286em 0.71428571em;
  color: #fff;
}
[class*="input-alert"]:after {
  left: 0.71428571em;
  margin-left: 0;
  top: -0.71428571em;
  border-bottom-color: #fff;
}
.input-alert--warning {
  background-color: #ec8e04;
}
.input-alert--warning:after {
  border-bottom-color: #ec8e04;
}
.input-alert--info {
  background-color: #13496d;
}
.input-alert--info:after {
  border-bottom-color: #13496d;
}
.input-alert--error {
  background-color: #e63c4d;
}
.input-alert--error:after {
  border-bottom-color: #e63c4d;
}
.input-alert--success {
  background-color: #72bc44;
}
.input-alert--success:after {
  border-bottom-color: #72bc44;
}
.no-boxshadow .bubble,
.no-boxshadow [class*="input-alert"] {
  border: 1px solid #a9a6a7;
}
/*

Form Modules

*/
.attached-label {
  -webkit-border-radius: 0.21428571em;
  -moz-border-radius: 0.21428571em;
  -o-border-radius: 0.21428571em;
  border-radius: 0.21428571em;
  /* Pretty */
  border: 1px solid #ddd;
}
.attached-label:hover,
.attached-label:focus,
.attached-label:active,
.attached-label.is-current {
  border-color: #837f81;
}
.attached-label .label {
  text-align: center;
  padding: 0 1.28571429em;
  background-color: #f7f7f9;
  border-left: 1px solid #ddd;
  border-right: 1px solid #ddd;
}
.attached-label .label:first-child,
.attached-label .label + input {
  border-left: none;
}
.attached-label input,
.attached-label [class*="btn"] {
  -webkit-border-radius: 0;
  -moz-border-radius: 0;
  -o-border-radius: 0;
  border-radius: 0;
  /* Pretty */
  border: none;
}
.attached-label input + .label,
.attached-label .label:last-child {
  border-right: none;
}
html,
body {
  min-width: 70.85714286em;
}
.wrapper {
  width: 92%;
  max-width: 78.57142857em;
  margin-left: auto;
  margin-right: auto;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
